{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/thymeleafBasic(part.2)/",
    "result": {"data":{"cur":{"id":"0faa151e-b49b-554f-a5ca-0a3f9889d399","html":"<h2 id=\"-텍스트\" style=\"position:relative;\"><a href=\"#-%ED%85%8D%EC%8A%A4%ED%8A%B8\" aria-label=\" 텍스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 텍스트</h2>\n<ul>\n<li>\n<p>타임리프의 가장 기본 기능인 텍스트를 출력하는 기능을 알아보도록 하겠다.</p>\n</li>\n<li>\n<p>타임리프는 기본적으로 HTML 태그 속성에 기능을 정의하여 동작한다. HTML의 콘텐츠에 데이터를 출력할 때는 다음과 같이 <code class=\"language-text\">th:text</code>를 사용하면 된다.</p>\n</li>\n<li>\n<p>ex)  <code class=\"language-text\">&lt;span th:text=\"${변수명}</code>과 같이 사용 할 수 있다.</p>\n</li>\n<li>\n<p>HTML 태그의 속성이 아니라 콘텐츠 영역 안에서 직접 데이터를 출력하고 싶다면, 다음과 같이 표현 할 수있다. <code class=\"language-text\">[[${변수명}]]</code></p>\n</li>\n<li>\n<p>다음은 예제를 통하여 좀 더 자세히 알아보도록 하자.</p>\n</li>\n</ul>\n<h3 id=\"-controller\" style=\"position:relative;\"><a href=\"#-controller\" aria-label=\" controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🐠 Controller</h3>\n<div class=\"gatsby-highlight\" data-language=\"basiccontroller.java\"><pre class=\"language-basiccontroller.java\"><code class=\"language-basiccontroller.java\">package hello.thymeleaf.basic;\n  import org.springframework.stereotype.Controller;\n  import org.springframework.ui.Model;\n  import org.springframework.web.bind.annotation.GetMapping;\n  import org.springframework.web.bind.annotation.RequestMapping;\n  @Controller\n  @RequestMapping(&quot;/basic&quot;)\n  public class BasicController {\n      @GetMapping(&quot;/text-basic&quot;)\n      public String textBasic(Model model) {\n          model.addAttribute(&quot;data&quot;, &quot;Hello Spring!&quot;);\n          return &quot;basic/text-basic&quot;;\n      }\n}\n\n</code></pre></div>\n<h3 id=\"-html\" style=\"position:relative;\"><a href=\"#-html\" aria-label=\" html permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 HTML</h3>\n<div class=\"gatsby-highlight\" data-language=\"text-basic.html\"><pre class=\"language-text-basic.html\"><code class=\"language-text-basic.html\"> &lt;!DOCTYPE html&gt;\n  &lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;\n  &lt;head&gt;\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\n      &lt;title&gt;Title&lt;/title&gt;\n  &lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;컨텐츠에 데이터 출력하기&lt;/h1&gt;\n&lt;ul&gt;\n&lt;li&gt;th:text 사용 &lt;span th:text=&quot;${data}&quot;&gt;&lt;/span&gt;&lt;/li&gt; &lt;li&gt;컨텐츠 안에서 직접 출력하기 = [[${data}]]&lt;/li&gt;\n  &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<h3 id=\"-실행\" style=\"position:relative;\"><a href=\"#-%EC%8B%A4%ED%96%89\" aria-label=\" 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 실행</h3>\n<ul>\n<li>\n<p>실행 결과를 보면 <code class=\"language-text\">${data}</code>의 값이 모델에 담겨 ‘Hello Spring!’을 출력하는것을 볼 수 있다.</p>\n</li>\n<li>\n<p>태그 안에서 그리고 태그 밖에서 직접 데이터를 출력할때 역시 정상적으로 출력이 되는 것을 알 수 있는 부분이다.</p>\n</li>\n</ul>\n<h3 id=\"escape\" style=\"position:relative;\"><a href=\"#escape\" aria-label=\"escape permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Escape</h3>\n<ul>\n<li>HTML문서는 <code class=\"language-text\">&lt; , ></code>와 같은 특수 문자를 기반으로 정의가 된다. 따라서 뷰 템플릿으로 HTML 화면을 생성 할 때에는 출력하는 데이터에 이러한 특수 문자가 있는것을 주의하여 사용해야 한다.\n앞에서 만든 예저의 데이터를 다음과 같이 변경해서 실행해 보자.</li>\n</ul>\n<h4 id=\"변경-전\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EA%B2%BD-%EC%A0%84\" aria-label=\"변경 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변경 전</h4>\n<p><code class=\"language-text\">\"Hello Spring!\"</code></p>\n<h4 id=\"변경-후\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EA%B2%BD-%ED%9B%84\" aria-label=\"변경 후 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변경 후</h4>\n<p><code class=\"language-text\">\"Hello &lt;b>Spring&lt;/b>\"</code></p>\n<ul>\n<li>\n<p><code class=\"language-text\">&lt;b></code>태그를 사용하여 <strong>Spring!</strong> 이라는 단어가 진하게 나오게 하고 싶다는 가정을 해보자.</p>\n</li>\n<li>\n<p>웹 브라우저에서는 이렇게 출력이 된다. <code class=\"language-text\">Hello &lt;b>Spring&lt;/b></code> 이처럼 태그가 랜더링 되지 않고, 태그 그 자체가 출력이 되어 나온다. 여기서, 소스보기를 누른다면 <code class=\"language-text\">Hello &amp;lt;b&amp;gt;Spring!&amp;lt;/b&amp;gt;</code>라고 출력이되어 나오는 것을 확인 할 수 있다.</p>\n</li>\n<li>\n<p>개발자가 의도한것은 <code class=\"language-text\">&lt;b></code>태그가 있다면 해당 부분을 강조하는 것이 목적이었다. 그러나 태그가 그대로 출력되어 나오고 소스보기를 하면 괄호의 부분이 문자화되어 나오는것을 볼 수 있다. 그 이유는 다음과 같다.</p>\n</li>\n</ul>\n<h3 id=\"-html-엔티티entity\" style=\"position:relative;\"><a href=\"#-html-%EC%97%94%ED%8B%B0%ED%8B%B0entity\" aria-label=\" html 엔티티entity permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥟 HTML 엔티티(Entity)</h3>\n<ul>\n<li>웹 브라우저는 괄호의 부분을 HTML태그의 시작으로 인식한다. 따라서 <code class=\"language-text\">&lt;</code>를 태그의 시작이 아닌, 문자로 표현 할 수 있는 방법이 필요한데, 이것을 HTML엔티티라 한다.</li>\n<li>그리고 이렇게 HTML에서 사용하는 특수 문자를 HTML엔티티로 변경하는 것을 이스케이프(escape)라 한다. 그리고 타임리프가 제공하는 `th:text, 혹은 [[${변수명}]]“은 <strong>기본적으로 이스케이프를 제공</strong>한다.</li>\n</ul>\n<p><code class=\"language-text\">참고 : html 엔티티와 관련하여 더 자세한 내용은 구글해볼것.</code></p>\n<h2 id=\"-타임리프의-unescape-기능\" style=\"position:relative;\"><a href=\"#-%ED%83%80%EC%9E%84%EB%A6%AC%ED%94%84%EC%9D%98-unescape-%EA%B8%B0%EB%8A%A5\" aria-label=\" 타임리프의 unescape 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 타임리프의 Unescape 기능</h2>\n<ul>\n<li>타임리프는 다음과 같이 두 기능을 제공하는데</li>\n</ul>\n<ol>\n<li>\n<p><code class=\"language-text\">th:text</code> -> <code class=\"language-text\">th:utext</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">[[${...}]]</code> -> <code class=\"language-text\">[(${...})]</code></p>\n</li>\n</ol>\n<ul>\n<li>위와 같이 사용 할 수 있다.</li>\n</ul>\n<h3 id=\"-해당-내용-컨트롤러에-추가\" style=\"position:relative;\"><a href=\"#-%ED%95%B4%EB%8B%B9-%EB%82%B4%EC%9A%A9-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC%EC%97%90-%EC%B6%94%EA%B0%80\" aria-label=\" 해당 내용 컨트롤러에 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 해당 내용 컨트롤러에 추가</h3>\n<div class=\"gatsby-highlight\" data-language=\"basiccontroller.java\"><pre class=\"language-basiccontroller.java\"><code class=\"language-basiccontroller.java\">\n    @GetMapping(&quot;/text-unescaped&quot;)\n    public String textUnescaped(Model model) {\n        model.addAttribute(&quot;data&quot;, &quot;Hello &lt;b&gt;Spring!&lt;/b&gt;&quot;);\n        return &quot;basic/text-unescaped&quot;;\n    }</code></pre></div>\n<h2 id=\"-추가된-내용을-html에서-받을때는\" style=\"position:relative;\"><a href=\"#-%EC%B6%94%EA%B0%80%EB%90%9C-%EB%82%B4%EC%9A%A9%EC%9D%84-html%EC%97%90%EC%84%9C-%EB%B0%9B%EC%9D%84%EB%95%8C%EB%8A%94\" aria-label=\" 추가된 내용을 html에서 받을때는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 추가된 내용을 HTML에서 받을때는~</h2>\n<div class=\"gatsby-highlight\" data-language=\"text-unescape.html\"><pre class=\"language-text-unescape.html\"><code class=\"language-text-unescape.html\">&lt;!DOCTYPE html&gt;\n    &lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;UTF-8&quot;&gt;\n        &lt;title&gt;Title&lt;/title&gt;\n    &lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;text vs utext&lt;/h1&gt;\n    &lt;ul&gt;\n        &lt;li&gt;th:text = &lt;span th:text=&quot;${data}&quot;&gt;&lt;/span&gt;&lt;/li&gt;\n        &lt;li&gt;th:utext = &lt;span th:utext=&quot;${data}&quot;&gt;&lt;/span&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;h1&gt;&lt;span th:inline=&quot;none&quot;&gt;[[...]] vs [(...)]&lt;/span&gt;&lt;/h1&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;span th:inline=&quot;none&quot;&gt;[[...]] = &lt;/span&gt;[[${data}]]&lt;/li&gt;\n        &lt;li&gt;&lt;span th:inline=&quot;none&quot;&gt;[(...)] = &lt;/span&gt;[(${data})]&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n</code></pre></div>\n<ul>\n<li><code class=\"language-text\">th:inline=\"none\"</code>: 타임리프는 <code class=\"language-text\">[[...]]</code> 를 해석하기 때문에, 화면에 <code class=\"language-text\">[[...]]</code> 글자를 보여줄 수 없다. 이 태그 안에서는 타임리프가 <strong>해석하지 말라</strong>는 옵션이다.</li>\n</ul>\n<p><strong><em>part 3 to be continue</em></strong>\n<strong>ps.김영한님의 mvc2강의에서..</strong></p>","excerpt":"🎈 텍스트 타임리프의 가장 기본 기능인 텍스트를 출력하는 기능을 알아보도록 하겠다. 타임리프는 기본적으로 HTML 태그 속성에 기능을 정의하여 동작한다. HTML의 콘텐츠에 데이터를 출력할 때는 다음과 같이 를 사용하면 된다. ex)  과 같이 사용 할 수 있다. HTML 태그의 속성이 아니라 콘텐츠 영역 안에서 직접 데이터를 출력하고 싶다면, 다음과 같이 표현 할 수있다.  다음은 예제를 통하여 좀 더 자세히 알아보도록 하자. 🐠 Controller 🍕 HTML 🍔 실행 실행 결과를 보면 의 값이 모델에 담겨 ‘Hello Spring!’을 출력하는것을 볼 수 있다. 태그 안에서 그리고 태그 밖에서 직접 데이터를 출력할때 역시 정상적으로 출력이 되는 것을 알 수 있는 부분이다. Escape HTML문서는 와 같은 특수 문자를 기반으로 정의가 된다. 따라서 뷰 템플릿으로 HTML 화면을 생성 할 때에는 출력하는 데이터에 이러한 특수 문자가 있는것을 주의하여 사용해야 한다.\n앞에서 만…","frontmatter":{"date":"December 04, 2023","title":"Thymeleaf-Basic(part.2 타임리프! text? utext??)","categories":"Thymeleaf","author":"아구","emoji":"🪼"},"fields":{"slug":"/thymeleafBasic(part.2)/"}},"next":{"id":"ebab0b42-cda5-5eeb-a2c8-c76557f59505","html":"<h2 id=\"-thymeleaf의-특징\" style=\"position:relative;\"><a href=\"#-thymeleaf%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\" thymeleaf의 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Thymeleaf의 특징</h2>\n<ul>\n<li>서버 사이드 HTML 렌더링</li>\n<li>(SSR) 네츄럴 템플릿</li>\n<li>스프링 통합 지원</li>\n</ul>\n<h3 id=\"-서버-사이드-html-렌더링-ssr\" style=\"position:relative;\"><a href=\"#-%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-html-%EB%A0%8C%EB%8D%94%EB%A7%81-ssr\" aria-label=\" 서버 사이드 html 렌더링 ssr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 서버 사이드 HTML 렌더링 (SSR)</h3>\n<ul>\n<li>타임리프는 백엔드 서버에서 HTML을 동적으로 렌더링 하는 용도로 사용된다.</li>\n</ul>\n<h3 id=\"-네츄럴-템플릿\" style=\"position:relative;\"><a href=\"#-%EB%84%A4%EC%B8%84%EB%9F%B4-%ED%85%9C%ED%94%8C%EB%A6%BF\" aria-label=\" 네츄럴 템플릿 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 네츄럴 템플릿</h3>\n<ul>\n<li>\n<p>타임리프는 순수 HTML을 최대한 유지하는 특징이 있다.</p>\n</li>\n<li>\n<p>타임리프로 작성한 파일은 HTML을 유지하기 때문에 웹 브라우저에서 파일을 직접 열어도 내용을 확인할 수 있고, 서버를 통해 뷰 템플릿을 거치면 동적으로 변경된 결과를 확인할 수 있다.</p>\n</li>\n<li>\n<p>JSP를 포함한 다른 뷰 템플릿들은 해당 파일을 열면, 예를 들어서 JSP 파일 자체를 그대로 웹 브라우저에서 열어보면 JSP 소스코드와 HTML이 뒤죽박죽 섞여서 웹 브라우저에서 정상적인 HTML 결과를 확인할 수 없다. 오직 서버를 통해서 JSP가 렌더링 되고 HTML 응답 결과를 받아야 화면을 확인할 수 있다.</p>\n</li>\n<li>\n<p>반면에 타임리프로 작성된 파일은 해당 파일을 그대로 웹 브라우저에서 열어도 정상적인 HTML 결과를 확인할 수 있다. 물론 이 경우 동적으로 결과가 렌더링 되지는 않는다. 하지만 HTML 마크업 결과가 어떻게 되는지 파일만 열어도 바로 확인할 수 있다.</p>\n</li>\n</ul>\n<p>이렇게 <em><strong>순수 HTML을 그대로 유지하면서 뷰 템플릿도 사용할 수 있는 타임리프의 특징을 네츄럴 템플릿</strong></em> (natural templates)이라 한다.</p>\n<h3 id=\"-스프링-통합-지원\" style=\"position:relative;\"><a href=\"#-%EC%8A%A4%ED%94%84%EB%A7%81-%ED%86%B5%ED%95%A9-%EC%A7%80%EC%9B%90\" aria-label=\" 스프링 통합 지원 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥟 스프링 통합 지원</h3>\n<ul>\n<li>타임리프는 스프링과 자연스럽게 통합되고, 스프링의 다양한 기능을 편리하게 사용할 수 있게 지원한다.</li>\n</ul>\n<p>(이부분은 추후 폼 사용방법에서 자세하게 다룰 예정이다.)</p>\n<h2 id=\"-타임리프-기본-기능\" style=\"position:relative;\"><a href=\"#-%ED%83%80%EC%9E%84%EB%A6%AC%ED%94%84-%EA%B8%B0%EB%B3%B8-%EA%B8%B0%EB%8A%A5\" aria-label=\" 타임리프 기본 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 타임리프 기본 기능</h2>\n<p>타임리프를 사용하려면 다음 선언을 하면 된다.</p>\n<h3 id=\"-타임리프-사용-선언\" style=\"position:relative;\"><a href=\"#-%ED%83%80%EC%9E%84%EB%A6%AC%ED%94%84-%EC%82%AC%EC%9A%A9-%EC%84%A0%EC%96%B8\" aria-label=\" 타임리프 사용 선언 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 타임리프 사용 선언</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2 id=\"-타임리프-기본-표현식\" style=\"position:relative;\"><a href=\"#-%ED%83%80%EC%9E%84%EB%A6%AC%ED%94%84-%EA%B8%B0%EB%B3%B8-%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\" 타임리프 기본 표현식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 타임리프 기본 표현식</h2>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">1. 간단한 표현\n- 변수 표현식: ${...}\n- 선택 변수 표현식: *{...}\n- 메시지 표현식: #{...}\n- 링크 URL 표현식: @{...}\n- 조각 표현식: ~{...}\n\n2. 리터럴\n- 텍스트: 'one text', 'Another one!',...\n- 숫자: 0, 34, 3.0, 12.3,...\n- 불린: true, false\n- 널: null\n- 리터럴 토큰: one, sometext, main,...\n\n3. 문자 연산:\n- 문자합치기:+\n- 리터럴 대체: |The name is ${name}|\n\n4. 산술 연산:\n- Binary operators: +, -, *, /, %\n- Minus sign (unary operator): -\n\n5. 불린 연산:\n    -   Binary operators: and, or\n- Boolean negation (unary operator): !, not\n\n6. 비교와 동등:\n- 비교:>,&lt;,>=,&lt;=(gt,lt,ge,le)\n- 동등 연산: ==, != (eq, ne)\n7. 조건 연산:\n    -   If-then: (if) ? (then)\n- If-then-else: (if) ? (then) : (else)\n    -   Default: (value) ?: (defaultvalue)\n8. 특별한 토큰:\n    -   No-Operation: _\n</code></pre></div>\n<p><code class=\"language-text\">참고</code>:<a href=\"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#standard-expression-syntax\">타임리프_공식_doc</a></p>\n<p><strong><em>part 2에서는 위의 소개된 기본 표현식을 직접 사용하여 어떻게 출력이 되는지 알아보겠다.</em></strong>\nps.김영한님의 mvc2강의에서…</p>","frontmatter":{"date":"December 03, 2023","title":"Thymeleaf-Basic(part.1 특징과 기본 표현식)","categories":"Thymeleaf","author":"아구","emoji":"🪼"},"fields":{"slug":"/thymeleafBasic(part.1)/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://leesungki.github.io","comments":{"utterances":{"repo":"LeeSungKi/leesungki.github.io"}}}}},"pageContext":{"slug":"/thymeleafBasic(part.2)/","nextSlug":"/thymeleafBasic(part.1)/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}