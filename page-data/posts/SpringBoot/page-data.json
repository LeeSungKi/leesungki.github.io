{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/SpringBoot",
    "result": {"pageContext":{"currentCategory":"SpringBoot","categories":["All","SpringBoot","JAVA","VUE","JS","Intellij","AWS","project"],"edges":[{"node":{"id":"d6f03a9a-7980-5414-b80e-0d7391d1dcb1","excerpt":"👀 개요 이전 포스팅 에서 S3에 대해서 간단하게 다뤘었다. 요번에는 S3에 파일을 업로드하는 과정을 포스팅 하려한다. ❗ S3에 대해서는 이전 포스팅 참고 S3란? 🦺 S3 버킷 생성에 대해서는 이전 포스팅 참고 S3 버킷 생성 🗑 S3 파일 업로드 버킷 생성 일단 나는 아래 그림처럼 file-upload-test-lee 라는 명칭으로 퍼블릭한 버킷을 하나 생성했다.\r\nspringboots3.PNG 해당 버킷을 클릭하여 들어가면 아무런 객체도 없는 상태이다.\r\nspringboots31.PNG 그리고 iam 권한에 사용자에게 S3FullAccess 권한을 부여해야 합니다. (이것이 있어야 S3에 파일 업로드를 할 수 있습니다.) 일단 aws 상에서의 작업은 이정도만 해주면된다. 이제 실제 어플리케이션 에서 aws s3 서비스를 구현해 보자. AmazonS3ClientBuilder 를 사용한 업로드 구현 의존성 추가 프로젝트 구조 AmazonS3Config CheckControlle…","fields":{"slug":"/gatsby-springboot-study-s3-service/"},"frontmatter":{"categories":"SpringBoot","title":"AWS S3 파일 업로드,다운로드","date":"March 07, 2022","imageUrl":"springboot.png"}},"next":{"fields":{"slug":"/gatsby-java-study/"}},"previous":null},{"node":{"id":"4f6e04bc-9e8b-5a5c-8bae-c3450b373d34","excerpt":"✅ 개요 AWS 의 SecretsManager의 RDS 정보를 받아 두개의 AWS RDS에 접근하여 데이터를 가져와보자\r\n 🔑 RDS 생성 먼저 AWS 에 RDS 를 2개 생성해야 한다.\r\n나는 미리 생성해 놨다. 🦄 mySQL RDS 생성방법은 링크를 참고해주세요! 🦄 postegreSQL RDS 생성방법은 링크를 참고해주세요! ✨ 비공개 RDS 접근 방법은 링크를 참고해주세요! 🔑 SecretsManager 사용 생성한 보안암호에 AWS RDS의 정보들이 있다. 두개를 생성해야 한다. 나는 미리 생성해 놨다. 🦄 SecretsManager 생성방법은 링크를 참고해주세요! 🎁 AWS RDS 연동 의존성 추가 jsch 는 private한 RDS에 접근하기위해 터널링시에 필요한 의존성이므로 추가해 주었다 밑에서 자세하게 다룰예정 일단은 추가해준다. 시크릿 매니저가 생성 되었다면 이제 해당 값을 가져오는 로직이 필요하다.\r\n나는 SecretManagerBuild class를 이용하여 …","fields":{"slug":"/gatsby-springboot-study-multirds/"},"frontmatter":{"categories":"SpringBoot","title":"Spring Boot + Secrets Manager + 다중 RDS 연동 (SSH 터널링)","date":"March 03, 2022","imageUrl":"springboot.png"}},"next":{"fields":{"slug":"/gatsby-springboot-study-intellij-sshrds/"}},"previous":{"fields":{"slug":"/gatsby-js-study-eventSource/"}}},{"node":{"id":"1a289d5c-8d1b-59ba-ade6-8f557f2cf6b6","excerpt":"✅ 개요 AWS 의 SecretsManager의 RDS 정보를 받아 AWS RDS에 접근하여 데이터를 가져와보자\r\n 🔑SecretsManager 사용 생성한 보안암호에 AWS RDS의 정보들이 있다.\r\n나는 미리 생성해 놨다. 🦄 SecretsManager 생성방법은 링크를 참고해주세요! AWS RDS 연동 의존성 추가 application.yml 파일에 datasource 정의 RDS 데이터 확인(IntelliJ)\\ DB 툴을 사용해서 확인도 가능하지만 나는 인텔리제이를 사용하므로 인텔리제이로 연동후 데이블과 데이터를 넣어줬다. 🦄 IntelliJ에서 RDS 연동 링크를 참고해주세요! 아래와 같이 테이블에 더미 데이터를 넣어줬다. springbootsm6.PNG 엔티티 생성 적당한 경로에 tb_file 테이블의 데이터를 가져오기 위한 엔티티와 리포지토리 를 만들어줬다. 컨트롤러 생성 정상적으로 값을 가져오는지 확인하기 위한 컨트롤러 생성한다. 포스트맨 호출 정상적으로 호출이 완료…","fields":{"slug":"/gatsby-springboot-study-rdsSecret/"},"frontmatter":{"categories":"SpringBoot","title":"Spring Boot + Secrets Manager + RDS 연동","date":"February 24, 2022","imageUrl":"springboot.png"}},"next":{"fields":{"slug":"/gatsby-springboot-study-intellij/"}},"previous":{"fields":{"slug":"/gatsby-aws-study-ec2/"}}},{"node":{"id":"82b93d3a-6b2c-52de-8aa1-155af5f863aa","excerpt":"✅ Spring Boot 연결하기 📌bootstrap.yml 사용 의존성 추가 프로젝트 상단에 bootstrap.yml파일을 추가해주고, 아래와 같이 설정 나의 경우 보안 암호 이름이 /secret/classificator_dev 이다 앞의 /secret는 해당 보안값이 들어가는 prefix 라고 보면된다.\r\n따라서 **/secret/**뒤의 값을 넣어주면 된다. 시크릿 값 확인 아래처럼 간편하게 확인 하기위해 컨트롤러를 하나 생성해 주었다. 포스트맨 호출 정상적으로 값을 가져오는지 확인한다.  시크릿 매니저에 저장한 값들을 확인할수 있다. 위와같은 방식은 확실히 간편하고 편하다 하지만 aws 에서 secrets manager를 사용하다보면 rds의 연결 정보라던가 여러 값들을 가져와야하는 경우가 또생긴다.\r\n그렇기땜에 secrets manager값들을 공통으로 받아서 처리할수 있는 부분이 있다면 더편하다. 📌SecretManagerBuild class 사용 디렉토리 구성 spri…","fields":{"slug":"/gatsby-springboot-study-secretsManager/"},"frontmatter":{"categories":"SpringBoot","title":"Spring Boot AWS Secrets Manager 연동","date":"February 23, 2022","imageUrl":"springboot.png"}},"next":{"fields":{"slug":"/gatsby-aws-study-secretsManager-tutorial/"}},"previous":{"fields":{"slug":"/gatsby-springboot-study-intellij/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}