{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/gatsby-aws-study-sqs/",
    "result": {"data":{"cur":{"id":"9d524d65-7bf2-5b80-8c49-46799dbb837e","html":"<h2 id=\"-amazon-simple-queue-서비스란-무엇입니까\" style=\"position:relative;\"><a href=\"#-amazon-simple-queue-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9E%85%EB%8B%88%EA%B9%8C\" aria-label=\" amazon simple queue 서비스란 무엇입니까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Amazon Simple Queue 서비스란 무엇입니까</h2>\n<p><strong><code class=\"language-text\">Amazon Simple Queue Service (Amazon SQS) 는 내구력 있고 가용성이 뛰어난 보안 호스팅 대기열을 제공하며 이를 통해 분산 소프트웨어 시스템과 구성 요소를 통합 및 분리할 수 있습니다.</code></strong></p>\n<h2 id=\"-amazon-sqs-사용의-이점\" style=\"position:relative;\"><a href=\"#-amazon-sqs-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9D%B4%EC%A0%90\" aria-label=\" amazon sqs 사용의 이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 Amazon SQS 사용의 이점</h2>\n<ul>\n<li>\n<p>보안–제어Amazon SQS 대기열로 메시지를 전송하고 이 대기열로부터의 메시지를 수신할 수 있는 사람</p>\n</li>\n<li>\n<p>서버 측 암호화 (SSE)는 에서 관리되는 키를 사용하여 대기열의 메시지 내용을 보호함으로써 민감한 데이터를 전송할 수 있습니다.AWS Key Management Service(AWS KMS).</p>\n</li>\n<li>\n<p>내구성— 메시지 안전을 위해 Amazon SQS 는 메시지를 여러 서버에 저장합니다. 표준 대기열 지원최소 1회의 메시지 전송및 FIFO 대기열 지원정확히 한 번 메시지 처리.</p>\n</li>\n<li>\n<p>가용성— Amazon SQS 사용중복 인프라는 메시지에 대한 고도의 동시 액세스와 메시지 생성 및 소비에 대한 고가용성을 제공합니다.</p>\n</li>\n<li>\n<p>확장성— Amazon SQS 각각 처리할 수 있습니다.요청 버퍼링독립적으로 투명하게 확장하여 프로비저닝 지침 없이도 로드 증가 또는 급증을 처리합니다.</p>\n</li>\n<li>\n<p>안정성— Amazon SQS 는 처리 중에 메시지를 잠그므로 여러 생산자와 소비자가 동시에 메시지를 전송하고 이를 통해 메시지를 수신할 수 있습니다.</p>\n</li>\n<li>\n<p>사용자 지정— 대기열이 똑같을 필요는 없습니다. 예를 들어대기열에 기본 지연 설정. 256KB보다 큰 메시지 내용을 저장할 수 있습니다.Amazon Simple Simple Storage Service (Amazon S3) 사용또는 Amazon SQS가 Amazon S3 객체에 대한 포인터를 들고 있는 Amazon DynamoDB를 사용하거나 큰 메시지를 더 작은 메시지로 분할할 수 있습니다.</p>\n</li>\n</ul>\n<p>출처: <a href=\"https://docs.aws.amazon.com/ko_kr/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html\">https://docs.aws.amazon.com/ko_kr/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html</a> [UsefulToKnow]</p>\n<h2 id=\"-대기열-유형\" style=\"position:relative;\"><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%9C%A0%ED%98%95\" aria-label=\" 대기열 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 대기열 유형</h2>\n<table>\n<thead>\n<tr>\n<th>표준 대기열</th>\n<th>FIFO 대기열</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>무제한 처리량 — 표준 대기열은 API 작업별로 초당 거의 무제한의 API 호출을 지원합니다.SendMessage,ReceiveMessage또는DeleteMessage.</td>\n<td>높은 처리량 — 사용하는배치FIFO 대기열은 API 메서드별로 초당 최대 3,000개의 메시지를 지원합니다.SendMessageBatch,ReceiveMessage또는DeleteMessageBatch.초당 3000개의 메시지는 300개의 API 호출을 나타내며, 각각 10개의 메시지를 일괄 처리합니다.</td>\n</tr>\n<tr>\n<td>최소 1회 전송— 메시지가 적어도 한 번 전달되고, 가끔 2개 이상의 메시지 복사본이 전달될 수 있습니다.</td>\n<td>정확히 1회 처리— 메시지가 한 번 전달되고 소비자가 이를 처리 및 삭제할 때까지 유지됩니다. 중복 항목을 대기열에 삽입하지 않습니다.</td>\n</tr>\n<tr>\n<td>주문은 보장되지 않음— 가끔 메시지가 전송된 순서와 다르게 전달될 수 있습니다.</td>\n<td>선착순 배송— 메시지가 전송되고 수신되는 순서가 엄격하게 유지됩니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"-사용이점\" style=\"position:relative;\"><a href=\"#-%EC%82%AC%EC%9A%A9%EC%9D%B4%EC%A0%90\" aria-label=\" 사용이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎴 사용이점</h2>\n<ul>\n<li>관리 오버헤드 제거\n<ul>\n<li>가용성, 확장성, 완젼관리형</li>\n</ul>\n</li>\n<li>메시지 전달 안정성\n<ul>\n<li>메시지 손실 없이 전달 가능</li>\n<li>시스템간 커플링 해소</li>\n<li>메시지 복제본 저장</li>\n</ul>\n</li>\n<li>데이터 안전성 유지\n<ul>\n<li>KMS 이용한 안전한 메시지 관리</li>\n<li>CloudTrail 키사용 내역 기록</li>\n</ul>\n</li>\n<li>탄력적, 비용효율적\n<ul>\n<li>동적확장 지원</li>\n<li>용량계획, 사전 프로비저닝 고민 필요 없음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 마무리</h2>\n<p>위와 같은 특성과 기능을 제공하므로 SQS를 사용하여 간다한 실습을 해보자.</p>\n<br>\r\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-amazon-simple-queue-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9E%85%EB%8B%88%EA%B9%8C\">🎈 Amazon Simple Queue 서비스란 무엇입니까</a></li>\n<li><a href=\"#-amazon-sqs-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9D%B4%EC%A0%90\">🍕 Amazon SQS 사용의 이점</a></li>\n<li><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%9C%A0%ED%98%95\">🍔 대기열 유형</a></li>\n<li><a href=\"#-%EC%82%AC%EC%9A%A9%EC%9D%B4%EC%A0%90\">🎴 사용이점</a></li>\n<li><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭 마무리</a></li>\n</ul>\n</div>","excerpt":"🎈 Amazon Simple Queue 서비스란 무엇입니까  🍕 Amazon SQS 사용의 이점 보안–제어Amazon SQS 대기열로 메시지를 전송하고 이 대기열로부터의 메시지를 수신할 수 있는 사람 서버 측 암호화 (SSE)는 에서 관리되는 키를 사용하여 대기열의 메시지 내용을 보호함으로써 민감한 데이터를 전송할 수 있습니다.AWS Key Management Service(AWS KMS). 내구성— 메시지 안전을 위해 Amazon SQS 는 메시지를 여러 서버에 저장합니다. 표준 대기열 지원최소 1회의 메시지 전송및 FIFO 대기열 지원정확히 한 번 메시지 처리. 가용성— Amazon SQS 사용중복 인프라는 메시지에 대한 고도의 동시 액세스와 메시지 생성 및 소비에 대한 고가용성을 제공합니다. 확장성— Amazon SQS 각각 처리할 수 있습니다.요청 버퍼링독립적으로 투명하게 확장하여 프로비저닝 지침 없이도 로드 증가 또는 급증을 처리합니다. 안정성— Amazon SQS 는 처…","frontmatter":{"date":"March 24, 2022","title":"Amazon Simple Queue(SQS) 란?","categories":"AWS","author":"쩡기","emoji":"🚀"},"fields":{"slug":"/gatsby-aws-study-sqs/"}},"next":{"id":"0cfa4c34-7f05-52cb-9297-bbfa16d351a6","html":"<h2 id=\"-개요\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%9A%94\" aria-label=\" 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 개요</h2>\n<p>AWS 의 OpenSearch를 사용하여 간단한 Serverless 검색 애플리케이션을 생성해보자</p>\n<p>Amazon API Gateway로 사용자를 OpenSearch API 및 AWS Lambda의 하위 집합으로 제한하여 API Gateway에서 OpenSearch Service로 보내는 요청에 서명하도록 구현 하겠다.</p>\n<blockquote>\n<p>Aws OpenSearch(Elasticsearch) 관련 포스팅은 <a href=\"https://leesungki.github.io/gatsby-aws-history-of-opensearch-tuto\">여기</a>를 참고하자</p>\n</blockquote>\n<h2 id=\"-1단계-샘플-데이터-인덱싱\" style=\"position:relative;\"><a href=\"#-1%EB%8B%A8%EA%B3%84-%EC%83%98%ED%94%8C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%B8%EB%8D%B1%EC%8B%B1\" aria-label=\" 1단계 샘플 데이터 인덱싱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧀 1단계: 샘플 데이터 인덱싱</h2>\n<p>사전 조건은 OpenSearch Service 도메인입니다.\r\n<a href=\"https://leesungki.github.io/gatsby-aws-history-of-opensearch-tuto/\">이전 포스팅</a>을 참고하여 도메인은 만들어져 있다는 가정하에 진행 합니다.</p>\n<p><a href=\"https://github.com/LeeSungKi/OpenSearchApp/blob/main/sample-movies.zip\">sample-movies.zip</a>을 다운로드하여 압축을 해제하고 _bulk API를 사용해 5,000개 문서를 movies 인덱스에 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">POST https://search-my-domain.us-west-1.es.amazonaws.com/_bulk //나의 오픈서치 도메인\r\n\r\n//sample-movies.zip파일\r\n{ \"index\": { \"_index\": \"movies\", \"_type\": \"movie\", \"_id\": \"tt1979320\" } }\r\n{\"directors\":[\"Ron Howard\"],\"release_date\":\"2013-09-02T00:00:00Z\",\"rating\":8.3,\"genres\":[\"Action\",\"Biography\",\"Drama\",\"Sport\"],\"image_url\":\"http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg\",\"plot\":\"A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.\",\"title\":\"Rush\",\"rank\":2,\"running_time_secs\":7380,\"actors\":[\"Daniel Brühl\",\"Chris Hemsworth\",\"Olivia Wilde\"],\"year\":2013,\"id\":\"tt1979320\",\"type\":\"add\"}\r\n{ \"index\": { \"_index\": \"movies\", \"_type\": \"movie\", \"_id\": \"tt1951264\" } }\r\n{\"directors\":[\"Francis Lawrence\"],\"release_date\":\"2013-11-11T00:00:00Z\",\"genres\":[\"Action\",\"Adventure\",\"Sci-Fi\",\"Thriller\"],\"image_url\":\"http://ia.media-imdb.com/images/M/MV5BMTAyMjQ3OTAxMzNeQTJeQWpwZ15BbWU4MDU0NzA1MzAx._V1_SX400_.jpg\",\"plot\":\"Katniss Everdeen and Peeta Mellark become targets of the Capitol after their victory in the 74th Hunger Games sparks a rebellion in the Districts of Panem.\",\"title\":\"The Hunger Games: Catching Fire\",\"rank\":4,\"running_time_secs\":8760,\"actors\":[\"Jennifer Lawrence\",\"Josh Hutcherson\",\"Liam Hemsworth\"],\"year\":2013,\"id\":\"tt1951264\",\"type\":\"add\"}\r\n...       </code></pre></div>\n<br>\r\n키바나 콘솔 에서 데이터 확인\r\n<br>\r\n<br>\n<p><img src=\"/1de1a9f95da82394b1f2cf4fc29c86a5/estuto1.png\" alt=\"estuto1.PNG\"></p>\n<h2 id=\"-2단계-api-gateway에서-api-생성\" style=\"position:relative;\"><a href=\"#-2%EB%8B%A8%EA%B3%84-api-gateway%EC%97%90%EC%84%9C-api-%EC%83%9D%EC%84%B1\" aria-label=\" 2단계 api gateway에서 api 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥨 2단계: API Gateway에서 API 생성</h2>\n<p>API Gateway를 사용하면 보다 제한된 API를 생성하고 OpenSearch _search API와의 상호 작용을 간소화할 수 있습니다. API Gateway를 사용하면 Amazon Cognito 인증 및 요청 조절 같은 보안 기능을 활성화할 수도 있습니다. API를 생성하고 배포하려면 다음 단계를 수행합니다.</p>\n<h3 id=\"api-생성-및-구성\" style=\"position:relative;\"><a href=\"#api-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B5%AC%EC%84%B1\" aria-label=\"api 생성 및 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 생성 및 구성</h3>\n<p>API Gateway 콘솔을 사용하여 API를 생성하려면</p>\n<ol>\n<li>API Gateway 내에서 API 생성(Create API)을 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/f38546d98d8a46aef04667bfdbb6eb23/estuto2.png\" alt=\"estuto2.PNG\">\r\n<br></p>\n<ol start=\"2\">\n<li>REST API(비공개 아님)를 찾고 구축(Build)를 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/d69ebf6e1b94082cf43fe4875e35f9b3/estuto3.png\" alt=\"estuto3.PNG\">\r\n<br></p>\n<ol start=\"3\">\n<li>다음 필드를 구성합니다.</li>\n</ol>\n<br>\n<p><img src=\"/1f4977437640b3c7294c8870c33b5cfe/estuto4.png\" alt=\"estuto4.PNG\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- API 이름: OpenSearch-api\r\n- 설명: Amazon OpenSearch Service API\r\n- 엔드포인트 유형: 리전별</code></pre></div>\n<br>\n<ol start=\"4\">\n<li>API 생성(Create API)을 선택합니다.</li>\n</ol>\n<br>\n<ol start=\"5\">\n<li>작업(Actions) 및 메서드 생성(Create Method)을 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/fc89e55d7b6d475844bf1500caf35458/estuto5.png\" alt=\"estuto5.PNG\">\r\n<br></p>\n<ol start=\"6\">\n<li>드롭다운에서 GET을 선택하고 확인 표시를 클릭하여 확인합니다.</li>\n</ol>\n<br>\n<ol start=\"7\">\n<li>다음 설정을 구성한 다음 저장(Save)을 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/5e973e943c271132f7f6d17e154e7f73/estuto6.png\" alt=\"estuto6.PNG\"></p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>통합 유형</td>\n<td>Lambda 함수</td>\n</tr>\n<tr>\n<td>Lambda 프록시 통합 사용</td>\n<td>예</td>\n</tr>\n<tr>\n<td>Lambda 리전</td>\n<td>ap-northeast-2</td>\n</tr>\n<tr>\n<td>Lambda 함수</td>\n<td>opensearch-lambda</td>\n</tr>\n<tr>\n<td>기본 제한 시간 사용</td>\n<td>예</td>\n</tr>\n</tbody>\n</table>\n<br>\t\n<h3 id=\"메서드-요청-구성\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C-%EC%9A%94%EC%B2%AD-%EA%B5%AC%EC%84%B1\" aria-label=\"메서드 요청 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메서드 요청 구성</h3>\n<p>메서드 요청(Method Request)을 선택하고 다음 설정을 구성합니다.\r\n<br></p>\n<p><img src=\"/22c57b077a560957ad2823875ee104ea/estuto7.png\" alt=\"estuto7.PNG\"></p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>승인</td>\n<td>NONE</td>\n</tr>\n<tr>\n<td>요청 검사기</td>\n<td>쿼리 문자열 파라미터 및 헤더 검사</td>\n</tr>\n<tr>\n<td>필수 API 키</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<br>\n<p>URL 쿼리 문자열 파라미터\r\n<br></p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>이름</td>\n<td>q</td>\n</tr>\n<tr>\n<td>필수</td>\n<td>예</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"api-배포-및-단계-구성\" style=\"position:relative;\"><a href=\"#api-%EB%B0%B0%ED%8F%AC-%EB%B0%8F-%EB%8B%A8%EA%B3%84-%EA%B5%AC%EC%84%B1\" aria-label=\"api 배포 및 단계 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 배포 및 단계 구성</h3>\n<p>API Gateway 콘솔에서 배포를 생성하고 새 단계 또는 기존 단계에 연결하여 API를 배포할 수 있습니다.\r\n<br></p>\n<ol>\n<li>작업(Actions) 및 API 배포(Deploy API)를 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/d8390b31d2b5b1e42c0d15e1ba06fd45/estuto8.png\" alt=\"estuto8.PNG\">\r\n<br></p>\n<ol start=\"2\">\n<li>배포 단계(Deployment stage)에서 새 단계(New Stage)를 클릭하고 단계 이름을 opensearch-api-test로 지정합니다.</li>\n</ol>\n<br>\n<ol start=\"3\">\n<li>배포(Deploy)를 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/d9abe088bac4567aa74b81f65d523512/estuto9.png\" alt=\"estuto9.PNG\">\r\n<br></p>\n<ol start=\"4\">\n<li>단계 편집기에서 다음 설정을 구성한 다음 변경 내용 저장(Save Changes)을 선택합니다.</li>\n</ol>\n<br>\n<p><img src=\"/ffe5a5cd85378070b1c39ddf4a128016/estuto10.png\" alt=\"estuto10.PNG\"></p>\n<table>\n<thead>\n<tr>\n<th>설정</th>\n<th>값</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>조절 활성화</td>\n<td>예</td>\n</tr>\n<tr>\n<td>요율</td>\n<td>1000</td>\n</tr>\n<tr>\n<td>버스트</td>\n<td>500</td>\n</tr>\n</tbody>\n</table>\n<br>\r\n이러한 설정은 엔드포인트 루트에 대한 GET 요청 (https://some-id.execute-api.ap-northeast-2.amazonaws.com/search-es-api-test) 메서드 하나뿐인 API를 구성합니다.\n<p>이 요청에는 파라미터 하나(q), 즉 검색할 쿼리 문자열이 필요합니다.</p>\n<p>메서드를 호출하면 요청이 Lambda로 전송되어 opensearch-lambda 함수가 실행됩니다.</p>\n<h2 id=\"-3단계-lambda-함수-생성-및-배포\" style=\"position:relative;\"><a href=\"#-3%EB%8B%A8%EA%B3%84-lambda-%ED%95%A8%EC%88%98-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EB%B0%B0%ED%8F%AC\" aria-label=\" 3단계 lambda 함수 생성 및 배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 3단계: Lambda 함수 생성 및 배포</h2>\n<p>API Gateway에서 API를 생성한 후 요청을 전달하는 Lambda 함수를 만듭니다.</p>\n<h3 id=\"lambda-함수-생성\" style=\"position:relative;\"><a href=\"#lambda-%ED%95%A8%EC%88%98-%EC%83%9D%EC%84%B1\" aria-label=\"lambda 함수 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lambda 함수 생성</h3>\n<p>API Gateway가 요청을 다음 Python 3.8 Lambda 함수로 전달합니다, 그러면 이 함수가 OpenSearch Service를 쿼리하고 결과를 반환합니다. 이 함수의 이름을 opensearch-lambda로 지정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">import</span> boto3\r\n<span class=\"token keyword\">import</span> json\r\n<span class=\"token keyword\">import</span> requests\r\n<span class=\"token keyword\">from</span> requests_aws4auth <span class=\"token keyword\">import</span> AWS4Auth\r\n\r\nregion <span class=\"token operator\">=</span> <span class=\"token string\">'ap-northeast-2'</span> <span class=\"token comment\"># For example</span>\r\nservice <span class=\"token operator\">=</span> <span class=\"token string\">'opensearchservice'</span>\r\ncredentials <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_credentials<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nawsauth <span class=\"token operator\">=</span> AWS4Auth<span class=\"token punctuation\">(</span>credentials<span class=\"token punctuation\">.</span>access_key<span class=\"token punctuation\">,</span> credentials<span class=\"token punctuation\">.</span>secret_key<span class=\"token punctuation\">,</span> region<span class=\"token punctuation\">,</span> service<span class=\"token punctuation\">,</span> session_token<span class=\"token operator\">=</span>credentials<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span>\r\n\r\nhost <span class=\"token operator\">=</span> <span class=\"token string\">''</span> <span class=\"token comment\"># 자신의 OpenSearch domain endpoint</span>\r\nindex <span class=\"token operator\">=</span> <span class=\"token string\">'movies'</span>\r\nurl <span class=\"token operator\">=</span> host <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> <span class=\"token string\">'/_search'</span>\r\n\r\n<span class=\"token comment\"># Lambda execution starts here</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n\r\n    <span class=\"token comment\"># Put the user query into the query DSL for more accurate search results.</span>\r\n    <span class=\"token comment\"># Note that certain fields are boosted (^).</span>\r\n    query <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"multi_match\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> event<span class=\"token punctuation\">[</span><span class=\"token string\">'queryStringParameters'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                <span class=\"token string\">\"fields\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"title^4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"plot^2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"actors\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"directors\"</span><span class=\"token punctuation\">]</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\"># Elasticsearch 6.x requires an explicit Content-Type header</span>\r\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json\"</span> <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\"># Make the signed HTTP request</span>\r\n    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> auth<span class=\"token operator\">=</span>awsauth<span class=\"token punctuation\">,</span> headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token comment\"># Create the response and add some extra content to support CORS</span>\r\n    response <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"statusCode\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">\"headers\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*'</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">\"isBase64Encoded\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">False</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token comment\"># Add the search results to the response</span>\r\n    response<span class=\"token punctuation\">[</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text\r\n    <span class=\"token keyword\">return</span> response</code></pre></div>\n<p>이 샘플 함수는 외부 라이브러리를 사용하므로 코드가 작동하려면 배포 패키지를 생성하고 Lambda에 업로드해야 합니다.</p>\n<p>Lambda 함수 및 배포 패키지를 만드는 방법에 대한 자세한 내용은 <a href=\"https://leesungki.github.io/gatsby-aws-study-lambda-import-tutorial\">Lambda Layers 사용하기</a>를 참고 하세요.</p>\n<h3 id=\"핸들러-수정\" style=\"position:relative;\"><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC-%EC%88%98%EC%A0%95\" aria-label=\"핸들러 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핸들러 수정</h3>\n<p>핸들러는 이벤트를 처리하는 함수 코드의 메서드입니다. Lambda 함수가 있는 배포 패키지의 파일 이름에 따라 핸들러 이름을 변경해야 합니다.\r\n예를 들어, 파일 이름이 function.py인 경우 핸들러 이름을 function.lambda_handler로 변경합니다.</p>\n<p><img src=\"/8b42fb82f95c9fb139d79f97d8124f5b/estuto11.png\" alt=\"estuto11.PNG\"></p>\n<h3 id=\"트리거-구성\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC%EA%B1%B0-%EA%B5%AC%EC%84%B1\" aria-label=\"트리거 구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리거 구성</h3>\n<p>트리거 추가(Add trigger)를 선택하고 함수를 호출하는 HTTP 엔드포인트를 생성합니다. 트리거 구성은 다음과 같아야 합니다.</p>\n<table>\n<thead>\n<tr>\n<th>트리거</th>\n<th>API</th>\n<th>배포 단계</th>\n<th>보안</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>API Gateway</td>\n<td>OpenSearch-api</td>\n<td>OpenSearch-api-test</td>\n<td>열기</td>\n</tr>\n</tbody>\n</table>\n<p>아래처럼 추가 된다.</p>\n<p><img src=\"/a1e64625063f9f7c654d2d574da4d441/estuto12.png\" alt=\"estuto12.PNG\"></p>\n<h2 id=\"-4단계-도메인-액세스-정책-수정\" style=\"position:relative;\"><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%95%A1%EC%84%B8%EC%8A%A4-%EC%A0%95%EC%B1%85-%EC%88%98%EC%A0%95\" aria-label=\" 4단계 도메인 액세스 정책 수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥞 4단계: 도메인 액세스 정책 수정</h2>\n<p>OpenSearch Service 도메인에서 Lambda 함수가 movies 인덱스에 GET 요청을 수행할 수 있도록 허용해야 합니다. 다음 정책은 opensearch-lambda-role(Lambda를 통해 생성됨)에 movies 인덱스에 대한 액세스를 제공합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"Principal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token property\">\"AWS\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arn:aws:iam::123456789012:role/service-role/opensearch-lambda-role-1abcdefg\"</span> <span class=\"token comment\">//예시</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es:ESHttpGet\"</span><span class=\"token punctuation\">,</span>\r\n      <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arn:aws:es:us-west-1:123456789012:domain/domain-name/movies/_search\"</span> <span class=\"token comment\">//예시</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Lambda가 자동으로 생성하는 역할의 정확한 이름을 얻으려면 AWS Identity and Access Management(IAM) 콘솔로 이동아혀 역할(Roles)을 클릭하고 “lambda”를 검색합니다.</p>\n</blockquote>\n<h2 id=\"-5단계-웹-애플리케이션-테스트\" style=\"position:relative;\"><a href=\"#-5%EB%8B%A8%EA%B3%84-%EC%9B%B9-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 5단계 웹 애플리케이션 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥗 5단계: 웹 애플리케이션 테스트</h2>\n<p>웹 애플리케이션을 테스트하려면</p>\n<ol>\n<li>\n<p><a href=\"https://github.com/LeeSungKi/OpenSearchApp/blob/main/sample-site.zip\">sample-site.zip</a>을 다운로드하고 압축을 해제하여 자주 사용하는 텍스트 편집기에서 scripts/search.js를 엽니다.</p>\n</li>\n<li>\n<p>apigatewayendpoint 변수를 업데이트하여 API Gateway 엔드포인트를 가리키도록 합니다. 엔드포인트의 형식은 <a href=\"https://some-id.execute-api.ap-northeast-2.amazonaws.com/opensearch-api-test%EC%9E%85%EB%8B%88%EB%8B%A4\">https://some-id.execute-api.ap-northeast-2.amazonaws.com/opensearch-api-test입니다</a>.</p>\n</li>\n<li>\n<p>index.html을 열고 thor, house 등 몇 가지 단어를 검색해 봅니다.</p>\n</li>\n</ol>\n<p><img src=\"/e1cca3fb8f998b5e9e7e5fde4098ceca/estuto14.png\" alt=\"estuto14.PNG\"></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭마무리</h2>\n<p>이렇게 오픈서치를 활용하여 Serverless 애플리케이션을 만들어 보았다.</p>\n<p>간단한거 같지만 aws 서비스에 대한 어느정도의 이해도가 필요하다 생각한다.</p>\n<p>이전 게시글들을 읽어보면 충분히 따라올수 있는 부분이라 생각한다.</p>\n<p>aws 를 접하면서 정말 필요하고 편리한 서비스라는 생각을 다시한번 하게되었다.</p>\n<br>\r\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EA%B0%9C%EC%9A%94\">✅ 개요</a></p>\n</li>\n<li>\n<p><a href=\"#-1%EB%8B%A8%EA%B3%84-%EC%83%98%ED%94%8C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9D%B8%EB%8D%B1%EC%8B%B1\">🧀 1단계: 샘플 데이터 인덱싱</a></p>\n</li>\n<li>\n<p><a href=\"#-2%EB%8B%A8%EA%B3%84-api-gateway%EC%97%90%EC%84%9C-api-%EC%83%9D%EC%84%B1\">🥨 2단계: API Gateway에서 API 생성</a></p>\n<ul>\n<li><a href=\"#api-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B5%AC%EC%84%B1\">API 생성 및 구성</a></li>\n<li><a href=\"#%EB%A9%94%EC%84%9C%EB%93%9C-%EC%9A%94%EC%B2%AD-%EA%B5%AC%EC%84%B1\">메서드 요청 구성</a></li>\n<li><a href=\"#api-%EB%B0%B0%ED%8F%AC-%EB%B0%8F-%EB%8B%A8%EA%B3%84-%EA%B5%AC%EC%84%B1\">API 배포 및 단계 구성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-3%EB%8B%A8%EA%B3%84-lambda-%ED%95%A8%EC%88%98-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EB%B0%B0%ED%8F%AC\">🍔 3단계: Lambda 함수 생성 및 배포</a></p>\n<ul>\n<li><a href=\"#lambda-%ED%95%A8%EC%88%98-%EC%83%9D%EC%84%B1\">Lambda 함수 생성</a></li>\n<li><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC-%EC%88%98%EC%A0%95\">핸들러 수정</a></li>\n<li><a href=\"#%ED%8A%B8%EB%A6%AC%EA%B1%B0-%EA%B5%AC%EC%84%B1\">트리거 구성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%95%A1%EC%84%B8%EC%8A%A4-%EC%A0%95%EC%B1%85-%EC%88%98%EC%A0%95\">🥞 4단계: 도메인 액세스 정책 수정</a></p>\n</li>\n<li>\n<p><a href=\"#-5%EB%8B%A8%EA%B3%84-%EC%9B%B9-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%ED%85%8C%EC%8A%A4%ED%8A%B8\">🥗 5단계: 웹 애플리케이션 테스트</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 22, 2022","title":"OpenSearch 검색 애플리케이션 생성","categories":"AWS","author":"쩡기","emoji":"🔍"},"fields":{"slug":"/gatsby-aws-study-opensearch-tuto/"}},"prev":{"id":"914355f1-c193-5d80-9adc-cc27f6241e9b","html":"<h2 id=\"-amazon-sqs-시작하기\" style=\"position:relative;\"><a href=\"#-amazon-sqs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\" amazon sqs 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Amazon SQS 시작하기</h2>\n<p>이 섹션에서는 Amazon SQS를 익숙하게 사용할 수 있도록 Amazon SQS 콘솔을 사용하여 대기열과 메시지를 관리하는 방법을 설명합니다.</p>\n<h3 id=\"-1단계-대기열-생성\" style=\"position:relative;\"><a href=\"#-1%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\" aria-label=\" 1단계 대기열 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 1단계: 대기열 생성</h3>\n<p>가장 먼저 이루어지고 가장 흔한 Amazon SQS 태스크는 대기열을 생성하는 것입니다. 이 절차는 FIFO 대기열을 생성 및 구성하는 방법을 보여줍니다.</p>\n<ol>\n<li>\n<p>에서 Amazon SQS 콘솔을 엽니다. <a href=\"https://console.aws.amazon.com/sqs/\">https://console.aws.amazon.com/sqs/</a></p>\n</li>\n<li>\n<p>대기열 생성을 선택합니다.</p>\n</li>\n</ol>\n<p><img src=\"/521df07b87582c258ca545a5be531ff2/sqs1.png\" alt=\"sqs1.PNG\"></p>\n<ol start=\"3\">\n<li>\n<p>이표준대기열 유형이 기본적으로 선택됩니다. 선택FIFO.</p>\n</li>\n<li>\n<p>대기열을 생성한 후에는 대기열 유형을 변경할 수 없습니다.</p>\n</li>\n<li>\n<p>대기열을 입력합니다. FIFO 대기열의 이름은 로 끝나야 합니다..fifo접미사.</p>\n</li>\n</ol>\n<p><img src=\"/82ab49bd4410acbe097bce0e3ce0181d/sqs2.png\" alt=\"sqs2.PNG\"></p>\n<ol start=\"6\">\n<li>나머지 기본설정 그대로 나두고 대기열 생성 클릭</li>\n</ol>\n<h3 id=\"-2단계-메시지-전송\" style=\"position:relative;\"><a href=\"#-2%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%A0%84%EC%86%A1\" aria-label=\" 2단계 메시지 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 2단계: 메시지 전송</h3>\n<p>대기열을 생성한 후 그 대기열에 메시지를 보낼 수 있습니다.</p>\n<ol>\n<li>왼쪽 탐색 창에서Queues. 대기열 목록에서 자신이 생성한 대기열을 선택합니다.</li>\n</ol>\n<p><img src=\"/bd812fa0a6c6839d392b4a9bfc2ec7ca/sqs3.png\" alt=\"sqs3.PNG\"></p>\n<ol start=\"2\">\n<li>택메시지 전송 및 수신 클릭</li>\n</ol>\n<p><img src=\"/54bdd653ae43fd02e6aaa305ef2858af/sqs4.png\" alt=\"sqs4.PNG\"></p>\n<ol start=\"3\">\n<li>아래와 같이 입력 (콘텐츠 기반 중복 제거가 활성화되어 있으면 메시지 중복 제거 ID가 필요하지 않습니다.)</li>\n</ol>\n<p><img src=\"/8a91d9cbebe8e650470a6f7133f67749/sqs5.png\" alt=\"sqs5.PNG\"></p>\n<ol start=\"4\">\n<li>메시지 전송을 선택합니다.</li>\n</ol>\n<p>메시지가 전송되고 콘솔이 성공 메시지를 표시합니다. 선택세부 정보 보기을 눌러 보낸 메시지에 대한 정보를 표시합니다.\r\n<img src=\"/bb2a7b32d91c5358a8cd3fb7dfd21bb4/sqs6.png\" alt=\"sqs6.PNG\"></p>\n<p><img src=\"/ba9a3abac4997e01309d9dde0fd6e136/sqs7.png\" alt=\"sqs7.PNG\"></p>\n<h3 id=\"-3단계-메시지-수신-및-삭제\" style=\"position:relative;\"><a href=\"#-3%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%88%98%EC%8B%A0-%EB%B0%8F-%EC%82%AD%EC%A0%9C\" aria-label=\" 3단계 메시지 수신 및 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥟 3단계: 메시지 수신 및 삭제</h3>\n<p>대기열로 메시지를 전송한 후 대기열에서 메시지를 검색할 수 있습니다. 대기열에서 메시지를 요청할 때 검색할 메시지를 지정할 수 없습니다. 검색할 메시지의 최대 개수 (최대 10개) 는 지정할 수 있습니다.</p>\n<ol>\n<li>메시지 폴링 클릭.</li>\n</ol>\n<p><img src=\"/ba05c4e4db89303ebf2e0223b6943c29/sqs8.png\" alt=\"sqs8.PNG\"></p>\n<ol start=\"2\">\n<li>Amazon SQS 대기열에서 메시지를 찾기 위해 서버를 폴링하기 시작합니다. 오른쪽의 진행률 표시줄메시지 수신섹션에는 폴링 지속 시간이 표시됩니다.</li>\n</ol>\n<p><img src=\"/77553502e23cf7476d02e60f48c96882/sqs9.png\" alt=\"sqs9.PNG\"></p>\n<ol start=\"3\">\n<li>\n<p>이메시지섹션에 수신된 메시지 목록이 표시됩니다. 각 메시지의 목록에는 메시지 ID, 보낸 날짜, 크기 및 수신 수가 표시됩니다.</p>\n</li>\n<li>\n<p>ID 클릭시 본문 확인가능.</p>\n</li>\n</ol>\n<p><img src=\"/02e8c1d5027a01ba742b613c12901719/sqs10.png\" alt=\"sqs10.PNG\"></p>\n<ol start=\"5\">\n<li>메시지를 삭제하려면 삭제할 메시지를 선택한 다음삭제.</li>\n</ol>\n<p><img src=\"/725c9be3a8e4cf946275816867691b53/sqs11.png\" alt=\"sqs11.PNG\"></p>\n<h3 id=\"-4단계-대기열-삭제\" style=\"position:relative;\"><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%82%AD%EC%A0%9C\" aria-label=\" 4단계 대기열 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 4단계: 대기열 삭제</h3>\n<ol>\n<li>\n<p>대기열 목록에서 자신이 생성한 대기열을 선택합니다.</p>\n</li>\n<li>\n<p>에서Queues페이지에서 삭제할 대기열을 선택합니다.</p>\n</li>\n<li>\n<p>선택대기열 삭제.</p>\n</li>\n</ol>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 마무리</h2>\n<p>AWS 콘솔 만으로 SQS대기열 생성하여 큐를 수신 송신 하는 간단한 사용법을 실습해봤다.</p>\n<p>이제 실제 프로젝트에서 사용하는 방법을 알아보자.</p>\n<br> \r\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-amazon-sqs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">🎈 Amazon SQS 시작하기</a></p>\n<ul>\n<li><a href=\"#-1%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\">🍕 1단계: 대기열 생성</a></li>\n<li><a href=\"#-2%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%A0%84%EC%86%A1\">🍔 2단계: 메시지 전송</a></li>\n<li><a href=\"#-3%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%88%98%EC%8B%A0-%EB%B0%8F-%EC%82%AD%EC%A0%9C\">🥟 3단계: 메시지 수신 및 삭제</a></li>\n<li><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%82%AD%EC%A0%9C\">🍘 4단계: 대기열 삭제</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭 마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 24, 2022","title":"Amazon Simple Queue(SQS) 생성","categories":"AWS","author":"쩡기","emoji":"🚀"},"fields":{"slug":"/gatsby-aws-study-sqs-tuto/"}},"site":{"siteMetadata":{"siteUrl":"https://leesungki.github.io","comments":{"utterances":{"repo":"LeeSungKi/leesungki.github.io"}}}}},"pageContext":{"slug":"/gatsby-aws-study-sqs/","nextSlug":"/gatsby-aws-study-opensearch-tuto/","prevSlug":"/gatsby-aws-study-sqs-tuto/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}