{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/gatsby-aws-study-ec2/",
    "result": {"data":{"cur":{"id":"4fc7d7b8-e77c-5693-84f2-a8f5a1f6af69","html":"<h2 id=\"-amazon-ec2-란\" style=\"position:relative;\"><a href=\"#-amazon-ec2-%EB%9E%80\" aria-label=\" amazon ec2 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Amazon EC2 란?</h2>\n<p>Amazon Elastic Compute Cloud(Amazon EC2)는 Amazon Web Services(AWS) 클라우드에서 확장 가능 컴퓨팅 용량을 제공합니다.</p>\n<p>Amazon EC2를 사용하면 하드웨어에 선투자할 필요가 없어 더 빠르게 애플리케이션을 개발하고 배포할 수 있습니다.</p>\n<h3 id=\"amazon-ec2의-기능\" style=\"position:relative;\"><a href=\"#amazon-ec2%EC%9D%98-%EA%B8%B0%EB%8A%A5\" aria-label=\"amazon ec2의 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Amazon EC2의 기능</h3>\n<p>Amazon EC2는 다음의 기능을 제공합니다.</p>\n<ul>\n<li>\n<p>인스턴스: 가상 컴퓨팅 환경</p>\n</li>\n<li>\n<p>mazon 머신 이미지(AMI): 서버에 필요한 운영체제와 여러 소프트웨어들이 적절히 구성된 상태로 제공되는 템플릿으로 인스턴스를 쉽게 만들 수 있습니다.</p>\n</li>\n<li>\n<p>인스턴스 유형: 인스턴스를 위한 CPU, 메모리, 스토리지, 네트워킹 용량의 여러 가지 구성 제공</p>\n</li>\n<li>\n<p>키 페어를 사용하여 인스턴스 로그인 정보 보호(AWS는 퍼블릭 키를 저장하고 사용자는 개인 키를 안전한 장소에 보관하는 방식)</p>\n</li>\n<li>\n<p>인스턴스 스토어 볼륨: 임시 데이터를 저장하는 스토리지 볼륨으로 인스턴스 중단, 최대 절전 모드로 전환 또는 종료 시 삭제됨</p>\n</li>\n<li>\n<p>Amazon Elastic Block Store(Amazon EBS), 즉 Amazon EBS 볼륨을 사용해 영구 스토리지 볼륨에 데이터 저장</p>\n</li>\n<li>\n<p>인스턴스와 Amazon EBS 볼륨 등의 리소스를 다른 물리적 장소에서 액세스할 수 있는 리전 및 가용 영역</p>\n</li>\n<li>\n<p>보안 그룹을 사용해 인스턴스에 연결할 수 있는 프로토콜, 포트, 소스 IP 범위를 지정하는 방화벽 기능</p>\n</li>\n<li>\n<p>탄력적 IP 주소(EIP): 동적 클라우드 컴퓨팅을 위한 고정 IPv4 주소</p>\n</li>\n<li>\n<p>태그: 사용자가 생성하여 Amazon EC2 리소스에 할당할 수 있는 메타데이터</p>\n</li>\n<li>\n<p>AWS 클라우드에서는 논리적으로 격리되어 있지만 원할 때마다 고객의 네트워크와 간편히 연결할 수 있는 가상 네트워크인 Virtual Private Clouds(VPC)</p>\n</li>\n</ul>\n<p>출처: <a href=\"https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/concepts.html\">https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/concepts.html</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-amazon-ec2-%EB%9E%80\">🎈 Amazon EC2 란?</a></p>\n<ul>\n<li><a href=\"#amazon-ec2%EC%9D%98-%EA%B8%B0%EB%8A%A5\">Amazon EC2의 기능</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"🎈 Amazon EC2 란? Amazon Elastic Compute Cloud(Amazon EC2)는 Amazon Web Services(AWS) 클라우드에서 확장 가능 컴퓨팅 용량을 제공합니다. Amazon EC2를 사용하면 하드웨어에 선투자할 필요가 없어 더 빠르게 애플리케이션을 개발하고 배포할 수 있습니다. Amazon EC2의 기능 Amazon EC2는 다음의 기능을 제공합니다. 인스턴스: 가상 컴퓨팅 환경 mazon 머신 이미지(AMI): 서버에 필요한 운영체제와 여러 소프트웨어들이 적절히 구성된 상태로 제공되는 템플릿으로 인스턴스를 쉽게 만들 수 있습니다. 인스턴스 유형: 인스턴스를 위한 CPU, 메모리, 스토리지, 네트워킹 용량의 여러 가지 구성 제공 키 페어를 사용하여 인스턴스 로그인 정보 보호(AWS는 퍼블릭 키를 저장하고 사용자는 개인 키를 안전한 장소에 보관하는 방식) 인스턴스 스토어 볼륨: 임시 데이터를 저장하는 스토리지 볼륨으로 인스턴스 중단, 최대 절전 …","frontmatter":{"date":"March 03, 2022","title":"AWS EC2 란?","categories":"AWS","author":"쩡기","emoji":"🎟"},"fields":{"slug":"/gatsby-aws-study-ec2/"}},"next":{"id":"bc64c5d7-8024-568d-8a22-286d379a8433","html":"<h2 id=\"-개요\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%9A%94\" aria-label=\" 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 개요</h2>\n<p>AWS 의 SecretsManager의 RDS 정보를 받아 AWS RDS에 접근하여 데이터를 가져와보자\r\n<br></p>\n<h3 id=\"secretsmanager-사용\" style=\"position:relative;\"><a href=\"#secretsmanager-%EC%82%AC%EC%9A%A9\" aria-label=\"secretsmanager 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔑SecretsManager 사용</h3>\n<p>생성한 보안암호에 AWS RDS의 정보들이 있다.\r\n나는 미리 생성해 놨다.</p>\n<blockquote>\n<p>🦄 SecretsManager 생성방법은 <a href=\"https://leesungki.github.io/gatsby-aws-study-secretsManager-tutorial/\">링크</a>를 참고해주세요!</p>\n</blockquote>\n<h3 id=\"aws-rds-연동\" style=\"position:relative;\"><a href=\"#aws-rds-%EC%97%B0%EB%8F%99\" aria-label=\"aws rds 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS RDS 연동</h3>\n<ol>\n<li>의존성 추가</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dependencies {    \r\n    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.27'\r\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\r\n    implementation group: 'com.amazonaws.secretsmanager', name: 'aws-secretsmanager-jdbc', version: '1.0.6'\r\n}</code></pre></div>\n<!-- 시크릿 매니저가 생성 되었다면 이제 해당 값을 가져오는 로직이 필요하다.\r\n나는 SecretManagerBuild class를 이용하여 진행하였다.\r\n> 🦄 SecretsManager 값 받아오기 [링크](https://leesungki.github.io/gatsby-springboot-study-secretsManager/#secretmanagerbuild-class-%EC%82%AC%EC%9A%A9)를 참고해주세요! -->\n<ol start=\"2\">\n<li>application.yml 파일에 datasource 정의</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">-</span>secretsmanager<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//aws<span class=\"token punctuation\">-</span>rds<span class=\"token punctuation\">-</span>mysql.cfukbqlziunf.ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span>2.rds.amazonaws.com<span class=\"token punctuation\">:</span>3306/InnoDB\r\n    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> /secret/hkmc<span class=\"token punctuation\">-</span>mip<span class=\"token punctuation\">-</span>rds<span class=\"token punctuation\">-</span>crawlerdb<span class=\"token punctuation\">-</span>dev\r\n    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.amazonaws.secretsmanager.sql.AWSSecretsManagerMySQLDriver</code></pre></div>\n<ol start=\"3\">\n<li>RDS 데이터 확인(IntelliJ)\\</li>\n</ol>\n<p>DB 툴을 사용해서 확인도 가능하지만 나는 인텔리제이를 사용하므로 인텔리제이로 연동후 데이블과 데이터를 넣어줬다.</p>\n<blockquote>\n<p>🦄 IntelliJ에서 RDS 연동 <a href=\"https://leesungki.github.io/gatsby-springboot-study-intellij\">링크</a>를 참고해주세요!</p>\n</blockquote>\n<p>아래와 같이 테이블에 더미 데이터를 넣어줬다.</p>\n<p><img src=\"/84e3f56c990ee80a7767472f677f113b/springbootsm6.png\" alt=\"springbootsm6.PNG\"></p>\n<ol start=\"4\">\n<li>엔티티 생성</li>\n</ol>\n<p>적당한 경로에 tb_file 테이블의 데이터를 가져오기 위한 엔티티와 리포지토리 를 만들어줬다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span>\r\n<span class=\"token annotation punctuation\">@Getter</span>\r\n<span class=\"token annotation punctuation\">@Table</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"tb_file\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token annotation punctuation\">@NoArgsConstructor</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TbFile</span> <span class=\"token punctuation\">{</span>\r\n\r\n\t<span class=\"token annotation punctuation\">@Id</span>\r\n\t<span class=\"token annotation punctuation\">@GeneratedValue</span><span class=\"token punctuation\">(</span>strategy <span class=\"token operator\">=</span> <span class=\"token class-name\">GenerationType</span><span class=\"token punctuation\">.</span>IDENTITY<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> wk_id<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">LocalDateTime</span> cre_dtm <span class=\"token operator\">=</span> <span class=\"token class-name\">LocalDateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token annotation punctuation\">@Builder</span>\r\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">TbFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> wk_id<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> path<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>wk_id <span class=\"token operator\">=</span> wk_id<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> type<span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> path<span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Repository</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TbFileRepository</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JpaRepository</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TbFile</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"5\">\n<li>컨트롤러 생성</li>\n</ol>\n<p>정상적으로 값을 가져오는지 확인하기 위한 컨트롤러 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\r\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CheckController</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token annotation punctuation\">@Autowired</span>\r\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">TbFileRepository</span> tbFileRepository<span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/secrets-check2\"</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponseEntity</span> <span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TbFile</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> tbFileRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"6\">\n<li>포스트맨 호출</li>\n</ol>\n<p>정상적으로 호출이 완료되는지 테스트한다.</p>\n<p><img src=\"/246e549d85eedacfba637dac777badea/springbootsm7.png\" alt=\"springbootsm7.PNG\"></p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭마무리</h2>\n<p>위와 같이 aws-secretsmanager-jdbc를 사용하여 application.yml 파일에 직접 secretsmanager 값을 가져와 datasource를 만들어 연동이 가능하다.\r\n하지만 RDS를 두 개를 연동해서 사용해야 하는 경우도 있기 때문에 이왕이면 config를 활용하여 연동해서 사용하는 게 좋을 거 같다.\r\n다음에는 ssh 터널링을 통한 다중 RDS 연동에 대해 다뤄볼 예정이다.</p>\n<br>\r\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EA%B0%9C%EC%9A%94\">✅ 개요</a></p>\n<ul>\n<li><a href=\"#secretsmanager-%EC%82%AC%EC%9A%A9\">🔑SecretsManager 사용</a></li>\n<li><a href=\"#aws-rds-%EC%97%B0%EB%8F%99\">AWS RDS 연동</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 24, 2022","title":"Spring Boot + Secrets Manager + RDS 연동","categories":"SpringBoot","author":"쩡기","emoji":"♻"},"fields":{"slug":"/springbootStudyRdsSecret/"}},"prev":{"id":"8e9f6070-f518-528f-9dea-bad091350b74","html":"<h2 id=\"-ec2-인스턴스-생성하기\" style=\"position:relative;\"><a href=\"#-ec2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\" ec2 인스턴스 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 EC2 인스턴스 생성하기</h2>\n<p>EC2 서비스에서 생성한 가상 서버를 인스턴스라 합니다.</p>\n<p>서버를 켜고 끄는것은 인스턴스를 실행하고 종료한다는 의미와 같습니다.</p>\n<ol>\n<li>인스턴스 시작</li>\n</ol>\n<p><img src=\"/88033dc2c591de90e90ef2eebb58f71a/ec21.png\" alt=\"ec21.PNG\"></p>\n<p>우측 상단에 region을 서울로 선택하고, “인스턴스 시작” 버튼을 클릭합니다.\r\n아래의 각 단계마다 ”?”아이콘 또는 링크에 자세한 공식문서 설명이 있으므로, 공식문서를 꼭 참고하시길 바랍니다.</p>\n<ol start=\"2\">\n<li>AMI 선택</li>\n</ol>\n<p><img src=\"/4575f6b34332d1542eff1f3798a89f7a/ec22.png\" alt=\"ec22.PNG\"></p>\n<p>보시는 이미지들은 AWS에서 제공하는 이미지들입니다.</p>\n<p>AMI는 서버에 필요한 운영체제와 여러 소프트웨어들이 적절히 구성된 상태로 제공되는 템플릿으로서, 이미지를 통해 인스턴스를 쉽게 만들 수 있습니다.</p>\n<p>여기서는 “Amazon Linux 2 AMI (HVM), SSD Volume Type” 인스턴스를 선택합니다.</p>\n<p>Amazon Linux 2는 차세대 Amazon Linux 운영 체제로, 현대식 애플리케이션 환경에 Linux 커뮤니티의 최신 향상 기능과 함께 장기적인 지원을 제공한다고 합니다.</p>\n<ol start=\"3\">\n<li>인스턴스 유형 선택</li>\n</ol>\n<p><img src=\"/39b97bb3e08fe650d839643b5e7ef69f/ec23.png\" alt=\"ec23.PNG\"></p>\n<p>사용목적에 따라 CPU, 메모리 등을 선택하여 인스턴스를 생성할 수 있습니다.</p>\n<p>저는 프리티어를 사용할 것이므로 프리티어에 체크 후, 다음으로 넘어갑니다.</p>\n<ol start=\"4\">\n<li>인스턴스 세부 정보 구성</li>\n</ol>\n<p><img src=\"/39fe7632da518008a93e16ab61f462e0/ec24.png\" alt=\"ec24.PNG\"></p>\n<p>세부 구성을 설정합니다.</p>\n<p>모두 기본값으로 설정해도 무방합니다.</p>\n<ol start=\"5\">\n<li>스토리지 추가</li>\n</ol>\n<p><img src=\"/288740ecb26b1e25bd773e67df65831d/ec25.png\" alt=\"ec25.PNG\"></p>\n<p>인스턴스의 스토리지를 설정합니다.</p>\n<p>Root 장치는 꼭 있어야 합니다.</p>\n<p>또한 볼륨 유형에 따라 비용의 차이가 있는데, 여기서는 기본 값인 범용 SSD를 선택합니다.</p>\n<p>모두 기본값으로 설정하고 넘어가도 무방합니다.</p>\n<ol start=\"6\">\n<li>태그 추가</li>\n</ol>\n<p><img src=\"/1e3c7ee0f04fb75dc33b0b68a2a7a89a/ec26.png\" alt=\"ec26.PNG\"></p>\n<p>고유의 메타데이터를 태그의 형태로 각 리소스에 배정하면 인스턴스, 이미지 및 기타 EC2 리소스를 쉽게 관리할 수 있는 태그를 설정합니다.</p>\n<p>굳이 설정하지 않고 넘어가도 무방합니다.</p>\n<ol start=\"7\">\n<li>보안 그룹 구성</li>\n</ol>\n<p><img src=\"/dd1a11053660f0b409d97b20d3da633c/ec27.png\" alt=\"ec27.PNG\"></p>\n<p>인스턴스에 대한 트래픽을 제어하는 방화벽을 설정합니다.</p>\n<p>인스턴스는 가상머신이므로 터미널을 통해 접속해야 하기 때문에, SSH 22번 포트만 기본값으로 작성되어있는 상태입니다.</p>\n<p>추가적으로 방화벽 오픈이 필요하다면 입력해주시면 됩니다.</p>\n<p>웹 서버로 활용되면 HTTP(80) / HTTPS(443) 정도 추가해줘도 좋을것 같습니다.</p>\n<ol start=\"8\">\n<li>인스턴스 시작 검토</li>\n</ol>\n<p>적용 사항을 확인하고 “시작”버튼을 클릭합니다.</p>\n<ol start=\"9\">\n<li>키 페어 선택/생성</li>\n</ol>\n<p><img src=\"/9fc05684b1bb591bd49b53f011b2d533/ec28.png\" alt=\"ec28.PNG\"></p>\n<p>키 페어(key pair)는 SSH 터미널로 인스턴스에 접근할 때 꼭 필요한 파일입니다.</p>\n<p>외부에 노출되어서도 안되며, 잃어버려서도 안되기 때문에 개인이 꼭!! 잘 보관하고 있어야 합니다.</p>\n<p>키 쌍을 다운받고 “인스턴스 시작”을 눌러서 인스턴스를 시작합니다.</p>\n<ol start=\"10\">\n<li>인스턴스 확인</li>\n</ol>\n<p><img src=\"/f14f55c2d36d4cf061d15e7a7e6f42f5/ec29.png\" alt=\"ec29.PNG\"></p>\n<p>이와 같이 “실행중” 상태가 됩니다.</p>\n<h2 id=\"마무리\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭마무리</h2>\n<p>이상으로 EC2 인스턴스를 생성하는 방법에 대해 알아보았습니다.</p>\n<p>출처: <a href=\"https://victorydntmd.tistory.com/61\">https://victorydntmd.tistory.com/61</a></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-ec2-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">🎈 EC2 인스턴스 생성하기</a></li>\n<li><a href=\"#%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭마무리</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 03, 2022","title":"AWS EC2 생성","categories":"AWS","author":"쩡기","emoji":"🎟"},"fields":{"slug":"/gatsby-aws-study-ec2-tuto/"}},"site":{"siteMetadata":{"siteUrl":"https://leesungki.github.io","comments":{"utterances":{"repo":"LeeSungKi/leesungki.github.io"}}}}},"pageContext":{"slug":"/gatsby-aws-study-ec2/","nextSlug":"/springbootStudyRdsSecret/","prevSlug":"/gatsby-aws-study-ec2-tuto/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}