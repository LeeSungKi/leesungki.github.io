{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/awsStudySqsTuto/",
    "result": {"data":{"cur":{"id":"57190236-a4ae-5851-9738-1da929640390","html":"<h2 id=\"-amazon-sqs-시작하기\" style=\"position:relative;\"><a href=\"#-amazon-sqs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\" amazon sqs 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Amazon SQS 시작하기</h2>\n<p>이 섹션에서는 Amazon SQS를 익숙하게 사용할 수 있도록 Amazon SQS 콘솔을 사용하여 대기열과 메시지를 관리하는 방법을 설명합니다.</p>\n<h3 id=\"-1단계-대기열-생성\" style=\"position:relative;\"><a href=\"#-1%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\" aria-label=\" 1단계 대기열 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 1단계: 대기열 생성</h3>\n<p>가장 먼저 이루어지고 가장 흔한 Amazon SQS 태스크는 대기열을 생성하는 것입니다. 이 절차는 FIFO 대기열을 생성 및 구성하는 방법을 보여줍니다.</p>\n<ol>\n<li>\n<p>에서 Amazon SQS 콘솔을 엽니다. <a href=\"https://console.aws.amazon.com/sqs/\">https://console.aws.amazon.com/sqs/</a></p>\n</li>\n<li>\n<p>대기열 생성을 선택합니다.</p>\n</li>\n</ol>\n<p><img src=\"/521df07b87582c258ca545a5be531ff2/sqs1.png\" alt=\"sqs1.PNG\"></p>\n<ol start=\"3\">\n<li>\n<p>이표준대기열 유형이 기본적으로 선택됩니다. 선택FIFO.</p>\n</li>\n<li>\n<p>대기열을 생성한 후에는 대기열 유형을 변경할 수 없습니다.</p>\n</li>\n<li>\n<p>대기열을 입력합니다. FIFO 대기열의 이름은 로 끝나야 합니다..fifo접미사.</p>\n</li>\n</ol>\n<p><img src=\"/82ab49bd4410acbe097bce0e3ce0181d/sqs2.png\" alt=\"sqs2.PNG\"></p>\n<ol start=\"6\">\n<li>나머지 기본설정 그대로 나두고 대기열 생성 클릭</li>\n</ol>\n<h3 id=\"-2단계-메시지-전송\" style=\"position:relative;\"><a href=\"#-2%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%A0%84%EC%86%A1\" aria-label=\" 2단계 메시지 전송 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 2단계: 메시지 전송</h3>\n<p>대기열을 생성한 후 그 대기열에 메시지를 보낼 수 있습니다.</p>\n<ol>\n<li>왼쪽 탐색 창에서Queues. 대기열 목록에서 자신이 생성한 대기열을 선택합니다.</li>\n</ol>\n<p><img src=\"/bd812fa0a6c6839d392b4a9bfc2ec7ca/sqs3.png\" alt=\"sqs3.PNG\"></p>\n<ol start=\"2\">\n<li>택메시지 전송 및 수신 클릭</li>\n</ol>\n<p><img src=\"/54bdd653ae43fd02e6aaa305ef2858af/sqs4.png\" alt=\"sqs4.PNG\"></p>\n<ol start=\"3\">\n<li>아래와 같이 입력 (콘텐츠 기반 중복 제거가 활성화되어 있으면 메시지 중복 제거 ID가 필요하지 않습니다.)</li>\n</ol>\n<p><img src=\"/8a91d9cbebe8e650470a6f7133f67749/sqs5.png\" alt=\"sqs5.PNG\"></p>\n<ol start=\"4\">\n<li>메시지 전송을 선택합니다.</li>\n</ol>\n<p>메시지가 전송되고 콘솔이 성공 메시지를 표시합니다. 선택세부 정보 보기을 눌러 보낸 메시지에 대한 정보를 표시합니다.\n<img src=\"/bb2a7b32d91c5358a8cd3fb7dfd21bb4/sqs6.png\" alt=\"sqs6.PNG\"></p>\n<p><img src=\"/ba9a3abac4997e01309d9dde0fd6e136/sqs7.png\" alt=\"sqs7.PNG\"></p>\n<h3 id=\"-3단계-메시지-수신-및-삭제\" style=\"position:relative;\"><a href=\"#-3%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%88%98%EC%8B%A0-%EB%B0%8F-%EC%82%AD%EC%A0%9C\" aria-label=\" 3단계 메시지 수신 및 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🥟 3단계: 메시지 수신 및 삭제</h3>\n<p>대기열로 메시지를 전송한 후 대기열에서 메시지를 검색할 수 있습니다. 대기열에서 메시지를 요청할 때 검색할 메시지를 지정할 수 없습니다. 검색할 메시지의 최대 개수 (최대 10개) 는 지정할 수 있습니다.</p>\n<ol>\n<li>메시지 폴링 클릭.</li>\n</ol>\n<p><img src=\"/ba05c4e4db89303ebf2e0223b6943c29/sqs8.png\" alt=\"sqs8.PNG\"></p>\n<ol start=\"2\">\n<li>Amazon SQS 대기열에서 메시지를 찾기 위해 서버를 폴링하기 시작합니다. 오른쪽의 진행률 표시줄메시지 수신섹션에는 폴링 지속 시간이 표시됩니다.</li>\n</ol>\n<p><img src=\"/77553502e23cf7476d02e60f48c96882/sqs9.png\" alt=\"sqs9.PNG\"></p>\n<ol start=\"3\">\n<li>\n<p>이메시지섹션에 수신된 메시지 목록이 표시됩니다. 각 메시지의 목록에는 메시지 ID, 보낸 날짜, 크기 및 수신 수가 표시됩니다.</p>\n</li>\n<li>\n<p>ID 클릭시 본문 확인가능.</p>\n</li>\n</ol>\n<p><img src=\"/02e8c1d5027a01ba742b613c12901719/sqs10.png\" alt=\"sqs10.PNG\"></p>\n<ol start=\"5\">\n<li>메시지를 삭제하려면 삭제할 메시지를 선택한 다음삭제.</li>\n</ol>\n<p><img src=\"/725c9be3a8e4cf946275816867691b53/sqs11.png\" alt=\"sqs11.PNG\"></p>\n<h3 id=\"-4단계-대기열-삭제\" style=\"position:relative;\"><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%82%AD%EC%A0%9C\" aria-label=\" 4단계 대기열 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍘 4단계: 대기열 삭제</h3>\n<ol>\n<li>\n<p>대기열 목록에서 자신이 생성한 대기열을 선택합니다.</p>\n</li>\n<li>\n<p>에서Queues페이지에서 삭제할 대기열을 선택합니다.</p>\n</li>\n<li>\n<p>선택대기열 삭제.</p>\n</li>\n</ol>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 마무리</h2>\n<p>AWS 콘솔 만으로 SQS대기열 생성하여 큐를 수신 송신 하는 간단한 사용법을 실습해봤다.</p>\n<p>이제 실제 프로젝트에서 사용하는 방법을 알아보자.</p>\n<br> \n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-amazon-sqs-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">🎈 Amazon SQS 시작하기</a></p>\n<ul>\n<li><a href=\"#-1%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\">🍕 1단계: 대기열 생성</a></li>\n<li><a href=\"#-2%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%A0%84%EC%86%A1\">🍔 2단계: 메시지 전송</a></li>\n<li><a href=\"#-3%EB%8B%A8%EA%B3%84-%EB%A9%94%EC%8B%9C%EC%A7%80-%EC%88%98%EC%8B%A0-%EB%B0%8F-%EC%82%AD%EC%A0%9C\">🥟 3단계: 메시지 수신 및 삭제</a></li>\n<li><a href=\"#-4%EB%8B%A8%EA%B3%84-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%82%AD%EC%A0%9C\">🍘 4단계: 대기열 삭제</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭 마무리</a></p>\n</li>\n</ul>\n</div>","excerpt":"🎈 Amazon SQS 시작하기 이 섹션에서는 Amazon SQS를 익숙하게 사용할 수 있도록 Amazon SQS 콘솔을 사용하여 대기열과 메시지를 관리하는 방법을 설명합니다. 🍕 1단계: 대기열 생성 가장 먼저 이루어지고 가장 흔한 Amazon SQS 태스크는 대기열을 생성하는 것입니다. 이 절차는 FIFO 대기열을 생성 및 구성하는 방법을 보여줍니다. 에서 Amazon SQS 콘솔을 엽니다. https://console.aws.amazon.com/sqs/ 대기열 생성을 선택합니다. sqs1.PNG 이표준대기열 유형이 기본적으로 선택됩니다. 선택FIFO. 대기열을 생성한 후에는 대기열 유형을 변경할 수 없습니다. 대기열을 입력합니다. FIFO 대기열의 이름은 로 끝나야 합니다..fifo접미사. sqs2.PNG 나머지 기본설정 그대로 나두고 대기열 생성 클릭 🍔 2단계: 메시지 전송 대기열을 생성한 후 그 대기열에 메시지를 보낼 수 있습니다. 왼쪽 탐색 창에서Queues. 대기열 …","frontmatter":{"date":"March 24, 2022","title":"Amazon Simple Queue(SQS) 생성","categories":"AWS","author":"쩡기","emoji":"🚀"},"fields":{"slug":"/awsStudySqsTuto/"}},"next":{"id":"8f1d59aa-4843-5937-b8f3-9f975a34e22d","html":"<h2 id=\"-amazon-simple-queue-서비스란-무엇입니까\" style=\"position:relative;\"><a href=\"#-amazon-simple-queue-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9E%85%EB%8B%88%EA%B9%8C\" aria-label=\" amazon simple queue 서비스란 무엇입니까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎈 Amazon Simple Queue 서비스란 무엇입니까</h2>\n<p><strong><code class=\"language-text\">Amazon Simple Queue Service (Amazon SQS) 는 내구력 있고 가용성이 뛰어난 보안 호스팅 대기열을 제공하며 이를 통해 분산 소프트웨어 시스템과 구성 요소를 통합 및 분리할 수 있습니다.</code></strong></p>\n<h2 id=\"-amazon-sqs-사용의-이점\" style=\"position:relative;\"><a href=\"#-amazon-sqs-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9D%B4%EC%A0%90\" aria-label=\" amazon sqs 사용의 이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍕 Amazon SQS 사용의 이점</h2>\n<ul>\n<li>\n<p>보안–제어Amazon SQS 대기열로 메시지를 전송하고 이 대기열로부터의 메시지를 수신할 수 있는 사람</p>\n</li>\n<li>\n<p>서버 측 암호화 (SSE)는 에서 관리되는 키를 사용하여 대기열의 메시지 내용을 보호함으로써 민감한 데이터를 전송할 수 있습니다.AWS Key Management Service(AWS KMS).</p>\n</li>\n<li>\n<p>내구성— 메시지 안전을 위해 Amazon SQS 는 메시지를 여러 서버에 저장합니다. 표준 대기열 지원최소 1회의 메시지 전송및 FIFO 대기열 지원정확히 한 번 메시지 처리.</p>\n</li>\n<li>\n<p>가용성— Amazon SQS 사용중복 인프라는 메시지에 대한 고도의 동시 액세스와 메시지 생성 및 소비에 대한 고가용성을 제공합니다.</p>\n</li>\n<li>\n<p>확장성— Amazon SQS 각각 처리할 수 있습니다.요청 버퍼링독립적으로 투명하게 확장하여 프로비저닝 지침 없이도 로드 증가 또는 급증을 처리합니다.</p>\n</li>\n<li>\n<p>안정성— Amazon SQS 는 처리 중에 메시지를 잠그므로 여러 생산자와 소비자가 동시에 메시지를 전송하고 이를 통해 메시지를 수신할 수 있습니다.</p>\n</li>\n<li>\n<p>사용자 지정— 대기열이 똑같을 필요는 없습니다. 예를 들어대기열에 기본 지연 설정. 256KB보다 큰 메시지 내용을 저장할 수 있습니다.Amazon Simple Simple Storage Service (Amazon S3) 사용또는 Amazon SQS가 Amazon S3 객체에 대한 포인터를 들고 있는 Amazon DynamoDB를 사용하거나 큰 메시지를 더 작은 메시지로 분할할 수 있습니다.</p>\n</li>\n</ul>\n<p>출처: <a href=\"https://docs.aws.amazon.com/ko_kr/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html\">https://docs.aws.amazon.com/ko_kr/AWSSimpleQueueService/latest/SQSDeveloperGuide/welcome.html</a> [UsefulToKnow]</p>\n<h2 id=\"-대기열-유형\" style=\"position:relative;\"><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%9C%A0%ED%98%95\" aria-label=\" 대기열 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🍔 대기열 유형</h2>\n<table>\n<thead>\n<tr>\n<th>표준 대기열</th>\n<th>FIFO 대기열</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>무제한 처리량 — 표준 대기열은 API 작업별로 초당 거의 무제한의 API 호출을 지원합니다.SendMessage,ReceiveMessage또는DeleteMessage.</td>\n<td>높은 처리량 — 사용하는배치FIFO 대기열은 API 메서드별로 초당 최대 3,000개의 메시지를 지원합니다.SendMessageBatch,ReceiveMessage또는DeleteMessageBatch.초당 3000개의 메시지는 300개의 API 호출을 나타내며, 각각 10개의 메시지를 일괄 처리합니다.</td>\n</tr>\n<tr>\n<td>최소 1회 전송— 메시지가 적어도 한 번 전달되고, 가끔 2개 이상의 메시지 복사본이 전달될 수 있습니다.</td>\n<td>정확히 1회 처리— 메시지가 한 번 전달되고 소비자가 이를 처리 및 삭제할 때까지 유지됩니다. 중복 항목을 대기열에 삽입하지 않습니다.</td>\n</tr>\n<tr>\n<td>주문은 보장되지 않음— 가끔 메시지가 전송된 순서와 다르게 전달될 수 있습니다.</td>\n<td>선착순 배송— 메시지가 전송되고 수신되는 순서가 엄격하게 유지됩니다.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"-사용이점\" style=\"position:relative;\"><a href=\"#-%EC%82%AC%EC%9A%A9%EC%9D%B4%EC%A0%90\" aria-label=\" 사용이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎴 사용이점</h2>\n<ul>\n<li>관리 오버헤드 제거\n<ul>\n<li>가용성, 확장성, 완젼관리형</li>\n</ul>\n</li>\n<li>메시지 전달 안정성\n<ul>\n<li>메시지 손실 없이 전달 가능</li>\n<li>시스템간 커플링 해소</li>\n<li>메시지 복제본 저장</li>\n</ul>\n</li>\n<li>데이터 안전성 유지\n<ul>\n<li>KMS 이용한 안전한 메시지 관리</li>\n<li>CloudTrail 키사용 내역 기록</li>\n</ul>\n</li>\n<li>탄력적, 비용효율적\n<ul>\n<li>동적확장 지원</li>\n<li>용량계획, 사전 프로비저닝 고민 필요 없음</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌭 마무리</h2>\n<p>위와 같은 특성과 기능을 제공하므로 SQS를 사용하여 간다한 실습을 해보자.</p>\n<br>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-amazon-simple-queue-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9E%85%EB%8B%88%EA%B9%8C\">🎈 Amazon Simple Queue 서비스란 무엇입니까</a></li>\n<li><a href=\"#-amazon-sqs-%EC%82%AC%EC%9A%A9%EC%9D%98-%EC%9D%B4%EC%A0%90\">🍕 Amazon SQS 사용의 이점</a></li>\n<li><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%9C%A0%ED%98%95\">🍔 대기열 유형</a></li>\n<li><a href=\"#-%EC%82%AC%EC%9A%A9%EC%9D%B4%EC%A0%90\">🎴 사용이점</a></li>\n<li><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🌭 마무리</a></li>\n</ul>\n</div>","frontmatter":{"date":"March 24, 2022","title":"Amazon Simple Queue(SQS) 란?","categories":"AWS","author":"쩡기","emoji":"🚀"},"fields":{"slug":"/gatsby-aws-study-sqs/"}},"prev":{"id":"15c79342-9c65-5ef6-a7a3-21b9fc21588a","html":"<h2 id=\"-개요\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%9A%94\" aria-label=\" 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👀 개요</h2>\n<p>이전 포스팅에서 SQS에 대해서 간단하게 다뤘었다.</p>\n<p>요번에는 SQS를 SPRING BOOT 에서 사용하는 방법을 실습해 보겠다.</p>\n<blockquote>\n<p>❗ SQS에 대해서는 이전 포스팅 참고 <a href=\"https://leesungki.github.io/gatsby-aws-study-sqs/\">SQS란?</a></p>\n</blockquote>\n<blockquote>\n<p>🦺 SQS 대기열 생성 큐 수신,송신에 대해서는 이전 포스팅 참고 <a href=\"https://leesungki.github.io/gatsby-aws-study-sqs-tuto/\">SQS 사용법</a></p>\n</blockquote>\n<h2 id=\"-실습\" style=\"position:relative;\"><a href=\"#-%EC%8B%A4%EC%8A%B5\" aria-label=\" 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📖 실습</h2>\n<h3 id=\"-대기열-생성\" style=\"position:relative;\"><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\" aria-label=\" 대기열 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💼 대기열 생성</h3>\n<p>일단 나는 아래 그림처럼 SQS 대기열을 생성했다.\n<img src=\"/31ec1359a1941042f3cee317a8b64414/sqs.png\" alt=\"sqs.PNG\"></p>\n<p>해당 대기열 클릭하여 들어가면 세부정보의 url을 확인 할수있다.\n나중에 사용하기 위해 기억해두자\n<img src=\"/aa35b766164b5f930eabd3564633cb32/sqs1.png\" alt=\"sqs1.PNG\"></p>\n<h3 id=\"-필수-설정하기\" style=\"position:relative;\"><a href=\"#-%ED%95%84%EC%88%98-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\" 필수 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖋 필수 설정하기</h3>\n<p>의존성 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.1.RELEASE'\nimplementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '2.2.3.RELEASE'\nimplementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.6'//나중에 메세지 유효성 검사를 위함</code></pre></div>\n<p>프로젝트 구조</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">controller\n    L MainController\nconfig\n    L AmazonSqsConfig\naws\n    L AmazonSQSSender\n    L AmazonSQSSenderImpl\ndto\n    L EcmDto    </code></pre></div>\n<p>application.yml</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">aws</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">credentials</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">access-key</span><span class=\"token punctuation\">:</span> xxxxxx\n      <span class=\"token key atrule\">secret-key</span><span class=\"token punctuation\">:</span> xxxxxx\n    <span class=\"token key atrule\">region</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">static</span><span class=\"token punctuation\">:</span> ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span><span class=\"token number\">2</span> <span class=\"token comment\"># AWS SQS의 리전정보</span>\n    <span class=\"token key atrule\">stack</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">auto</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">sqs</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">queue</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> MyQueue.fifo\t<span class=\"token comment\"># AWS에서 생성한 Queue 이름</span>\n        <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//sqs.ap<span class=\"token punctuation\">-</span>northeast<span class=\"token punctuation\">-</span>2.amazonaws.com/xxxx/MyQueue.fifo <span class=\"token comment\"># 생성한 SQS 큐 url</span></code></pre></div>\n<p>application.yml 에 aws 관련 정보를 기재해 준다.</p>\n<h3 id=\"-sqs-configuration-클래스-생성\" style=\"position:relative;\"><a href=\"#-sqs-configuration-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\" sqs configuration 클래스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖊 SQS Configuration 클래스 생성</h3>\n<ul>\n<li>application.yml에 있는 access-key, secret-key 값을 가지고 AWSCredentialsProvider 빈 생성</li>\n<li>Message 송신에 사용되는 AmazonSQS 빈 생성 시 해당 credentials 정보와 region 정보 설정</li>\n<li>Message 수신시 사용되는 Listener 관련 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AmazonSqsConfig</span> <span class=\"token punctuation\">{</span>\n\n\t <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${cloud.aws.credentials.access-key}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> accessKey<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${cloud.aws.credentials.secret-key}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> secretKey<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${cloud.aws.region.static}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> region<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * sqs 접근을 위한 위한 사용자 bean\n     */</span>\n    <span class=\"token annotation punctuation\">@Primary</span>\n\t<span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">AmazonSQSAsync</span> <span class=\"token function\">amazonSQSAws</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">BasicAWSCredentials</span> awsCreds <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicAWSCredentials</span><span class=\"token punctuation\">(</span>accessKey<span class=\"token punctuation\">,</span> secretKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">AmazonSQSAsyncClientBuilder</span><span class=\"token punctuation\">.</span><span class=\"token function\">standard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withRegion</span><span class=\"token punctuation\">(</span>region<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withCredentials</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AWSStaticCredentialsProvider</span><span class=\"token punctuation\">(</span>awsCreds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>AmazonSQSAsyncClientBuilder 를통해 접근 정보를 만들어 준다.</p>\n<h3 id=\"-메세지-dto-생성\" style=\"position:relative;\"><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-dto-%EC%83%9D%EC%84%B1\" aria-label=\" 메세지 dto 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🖌 메세지 Dto 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token annotation punctuation\">@Setter</span>\n<span class=\"token annotation punctuation\">@JsonIgnoreProperties</span><span class=\"token punctuation\">(</span>ignoreUnknown <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EcmDto</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token annotation punctuation\">@NotEmpty</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"ecmId값이 빈값입니다.\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> ecmId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자신이 메세지를 보낼방식으로 작성하면 된다.</p>\n<h3 id=\"-메세지-전달-서비스-생성\" style=\"position:relative;\"><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%A0%84%EB%8B%AC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\" 메세지 전달 서비스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📤 메세지 전달 서비스 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AmazonSQSSenderImpl</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">SendMessageResult</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EcmDto</span> message<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JsonProcessingException</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AmazonSQSSender</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AmazonSQSSenderImpl</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${cloud.aws.sqs.queue.url}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ObjectMapper</span> objectMapper<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AmazonSQS</span> amazonSQS<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SendMessageResult</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EcmDto</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JsonProcessingException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">SendMessageRequest</span> sendMessageRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SendMessageRequest</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>\n                objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withMessageGroupId</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sqs-test\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">withMessageDeduplicationId</span><span class=\"token punctuation\">(</span>UUID<span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> amazonSQS<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>sendMessageRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>SQS에 메세지 보내는 로직을 정의한다.</p>\n<h3 id=\"-테스트용-controller-생성\" style=\"position:relative;\"><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9-controller-%EC%83%9D%EC%84%B1\" aria-label=\" 테스트용 controller 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📫 테스트용 Controller 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">AmazonSQSSenderImpl</span> amazonSQSSender<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/send\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">EcmDto</span> message<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">JsonProcessingException</span> <span class=\"token punctuation\">{</span>\n        amazonSQSSender<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"-포스트-맨을-통한-메세지-송신-테스트\" style=\"position:relative;\"><a href=\"#-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A7%A8%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%86%A1%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 포스트 맨을 통한 메세지 송신 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📈 포스트 맨을 통한 메세지 송신 테스트</h3>\n<p>아래와 같이 요청한다.</p>\n<p><img src=\"/4747485a5915e79b2301573a15bd14db/sqs2.png\" alt=\"sqs2.PNG\"></p>\n<p>sqs 콘솔에서 메세지 폴링해보면 내가 보낸 메세지가 있는걸 확인 할수 있다.\n<img src=\"/667e99292c0db52290559874112ed54a/sqs3.png\" alt=\"sqs3.PNG\"></p>\n<h3 id=\"-메세지-수신-listener-생성\" style=\"position:relative;\"><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%88%98%EC%8B%A0-listener-%EC%83%9D%EC%84%B1\" aria-label=\" 메세지 수신 listener 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📥 메세지 수신 Listener 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@RequiredArgsConstructor</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AwsSqsListener</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token annotation punctuation\">@SqsListener</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"${cloud.aws.sqs.queue.name}\"</span><span class=\"token punctuation\">,</span> deletionPolicy <span class=\"token operator\">=</span> <span class=\"token class-name\">SqsMessageDeletionPolicy</span><span class=\"token punctuation\">.</span>NEVER<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Payload</span> <span class=\"token class-name\">String</span> info<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Headers</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> headers<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Acknowledgment</span> ack<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------start SqsListener\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------info {}\"</span><span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------headers {}\"</span><span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//수신후 삭제처리</span>\n\t\tack<span class=\"token punctuation\">.</span><span class=\"token function\">acknowledge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>메세지 리스너 작성을 해준다.</p>\n<h3 id=\"-포스트-맨을-통한-메세지-수신-테스트\" style=\"position:relative;\"><a href=\"#-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A7%A8%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%88%98%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\" 포스트 맨을 통한 메세지 수신 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📉 포스트 맨을 통한 메세지 수신 테스트</h3>\n<p>아래와 같이 다시 요청한다.</p>\n<p><img src=\"/4747485a5915e79b2301573a15bd14db/sqs2.png\" alt=\"sqs2.PNG\"></p>\n<p>아래처럼 내가 방금 보낸 메세지를 확인할 수 있다.</p>\n<p><img src=\"/f3dddaf2d1fdab6a8c27b0f957acaea9/sqs4.png\" alt=\"sqs4.PNG\"></p>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📢 마무리</h2>\n<p>이처럼 springboot에서 sqs에 접근 후 메세지를 보내고 받는기능을 구현해 보았다.</p>\n<p>같은 vpc내의 컨테이너끼리 메세지를 주고받기 굉장히 편한 기능같다.</p>\n<p>실제로 내가 진행한 프로젝트에서도 컨테이너간 간단한 메세지 전송에 사용되었다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EA%B0%9C%EC%9A%94\">👀 개요</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%8B%A4%EC%8A%B5\">📖 실습</a></p>\n<ul>\n<li><a href=\"#-%EB%8C%80%EA%B8%B0%EC%97%B4-%EC%83%9D%EC%84%B1\">💼 대기열 생성</a></li>\n<li><a href=\"#-%ED%95%84%EC%88%98-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">🖋 필수 설정하기</a></li>\n<li><a href=\"#-sqs-configuration-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%83%9D%EC%84%B1\">🖊 SQS Configuration 클래스 생성</a></li>\n<li><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-dto-%EC%83%9D%EC%84%B1\">🖌 메세지 Dto 생성</a></li>\n<li><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%A0%84%EB%8B%AC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%83%9D%EC%84%B1\">📤 메세지 전달 서비스 생성</a></li>\n<li><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9A%A9-controller-%EC%83%9D%EC%84%B1\">📫 테스트용 Controller 생성</a></li>\n<li><a href=\"#-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A7%A8%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%86%A1%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8\">📈 포스트 맨을 통한 메세지 송신 테스트</a></li>\n<li><a href=\"#-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%88%98%EC%8B%A0-listener-%EC%83%9D%EC%84%B1\">📥 메세지 수신 Listener 생성</a></li>\n<li><a href=\"#-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%A7%A8%EC%9D%84-%ED%86%B5%ED%95%9C-%EB%A9%94%EC%84%B8%EC%A7%80-%EC%88%98%EC%8B%A0-%ED%85%8C%EC%8A%A4%ED%8A%B8\">📉 포스트 맨을 통한 메세지 수신 테스트</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">📢 마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"March 24, 2022","title":"AWS SQS + SPRING BOOT 사용법","categories":"SpringBoot","author":"쩡기","emoji":"👖"},"fields":{"slug":"/gatsby-springboot-study-sqs/"}},"site":{"siteMetadata":{"siteUrl":"https://leesungki.github.io","comments":{"utterances":{"repo":"LeeSungKi/leesungki.github.io"}}}}},"pageContext":{"slug":"/awsStudySqsTuto/","nextSlug":"/gatsby-aws-study-sqs/","prevSlug":"/gatsby-springboot-study-sqs/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}